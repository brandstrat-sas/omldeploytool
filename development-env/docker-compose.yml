services:
  app:
    build:
      target: run
      context: ${REPO_PATH}/omlapp
    image: ${OMLAPP_IMG}
    container_name: oml-django
    depends_on:
      - postgresql
      - redis
      - acd
      - minio
    dns: 8.8.8.8
    environment:
      - DJANGO_ALLOW_ASYNC_UNSAFE=true
      - CRON_ENABLE=false
      - TZ=${TZ}
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - PGHOST=${PGHOST}
      - PGDATABASE=${PGDATABASE}
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOSTHA=${PGHOSTHA}
      - PGHOSTRO=${PGHOSTRO}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - WEBSOCKET_HOST=${WEBSOCKET_HOSTNAME}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT}
      - CALIFICACION_REAGENDA=${CALIFICACION_REAGENDA}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - EPHEMERAL_USER_TTL=${EPHEMERAL_USER_TTL}
      - INSTALL_PREFIX=${INSTALL_PREFIX}
      - LOGIN_FAILURE_LIMIT=${LOGIN_FAILURE_LIMIT}
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
      - PYTHONPATH=${PYTHONPATH}
      - SESSION_COOKIE_AGE=${SESSION_COOKIE_AGE}
      - CALLREC_DEVICE=${CALLREC_DEVICE}
      - MONITORFORMAT=mp3
      - S3_STORAGE_ENABLED=true
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ENDPOINT_MINIO=${S3_ENDPOINT_MINIO}
      - AWS_DEFAULT_REGION=us-east-1
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - GOOGLE_MAPS_CENTER='${GOOGLE_MAPS_CENTER}'
      - EMAIL_BACKEND=django.core.mail.backends.dummy.EmailBackend
      - OML_BRANCH=${OML_BRANCH}
      - OML_COMMIT=${OML_COMMIT}
      - OML_BUILD_DATE=${OML_BUILD_DATE}
      - WOMBAT_HOSTNAME=wombat
      - WOMBAT_USER=${WOMBAT_USER}
      - WOMBAT_PASSWORD=${WOMBAT_PASSWORD}
      - OML_LOGGING_SLOWSQL_ENABLED=
      - OML_LOGGING_SLOWSQL_OUTPUT="-"
      - OML_LOGGING_SLOWSQL_DURATION=1
    #image: ${OMLAPP_IMG}
    command: /opt/omnileads/bin/init_devenv.sh
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true
    working_dir: /opt/omnileads/ominicontacto
    volumes:
      - django_callrec_zip:/opt/omnileads/asterisk/var/spool/asterisk/monitor
      - ${REPO_PATH}/omlapp/:/opt/omnileads/ominicontacto/
      - ${REPO_PATH}/survey_app/:/opt/omnileads/ominicontacto/survey_app
      - ${REPO_PATH}/wallboard_app/:/opt/omnileads/ominicontacto/wallboard_app
      - ${REPO_PATH}/premium_reports_app/:/opt/omnileads/ominicontacto/premium_reports_app
      - ${REPO_PATH}/webphone_client_app/:/opt/omnileads/ominicontacto/webphone_client_app

  crones:
    container_name: oml-django-cron
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - PGHOST=${PGHOST}
      - PGDATABASE=${PGDATABASE}
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOSTHA=${PGHOSTHA}
      - PGHOSTRO=${PGHOSTRO}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - WEBSOCKET_HOST=${WEBSOCKET_HOSTNAME}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT}
      - CALIFICACION_REAGENDA=${CALIFICACION_REAGENDA}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - EPHEMERAL_USER_TTL=${EPHEMERAL_USER_TTL}
      - INSTALL_PREFIX=${INSTALL_PREFIX}
      - LOGIN_FAILURE_LIMIT=${LOGIN_FAILURE_LIMIT}
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
      - PYTHONPATH=${PYTHONPATH}
      - SESSION_COOKIE_AGE=${SESSION_COOKIE_AGE}
      - CALLREC_DEVICE=${CALLREC_DEVICE}
      - MONITORFORMAT=mp3
      - S3_STORAGE_ENABLED=true
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT_MINIO}
      - AWS_DEFAULT_REGION=us-east-1
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - GOOGLE_MAPS_CENTER='${GOOGLE_MAPS_CENTER}'
      - EMAIL_BACKEND=django.core.mail.backends.dummy.EmailBackend
      - OML_BRANCH=${OML_BRANCH}
      - OML_COMMIT=${OML_COMMIT}
      - OML_BUILD_DATE=${OML_BUILD_DATE}
      - WOMBAT_HOSTNAME=localhost
      - WOMBAT_USER=${WOMBAT_USER}
      - WOMBAT_PASSWORD=${WOMBAT_PASSWORD}
      - OML_LOGGING_SLOWSQL_ENABLED=
      - OML_LOGGING_SLOWSQL_OUTPUT="-"
      - OML_LOGGING_SLOWSQL_DURATION=1
    image: ${OMLAPP_IMG}
    command: /opt/omnileads/bin/init_cronos.sh
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true
    working_dir: /opt/omnileads/

  fastagi:
    build:
      target: run
      context: ${REPO_PATH}/omlfastagi
    image: ${OMLFASTAGI_IMG}
    container_name: oml-fastagi
    command: python /app/fastagi.py
    environment:
      - TZ=${TZ}
      - PGHOST=${PGHOST}
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGDATABASE=${PGDATABASE}
      - PGPASSWORD=${PGPASSWORD}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - REDIS_PORT=6379
    volumes:
      - ${REPO_PATH}/omlfastagi/fastagi.py:/app/fastagi.py
    restart: on-failure
    networks:
      - omnileads

  ami:
    build:
      target: run
      context: ${REPO_PATH}/omlami
    image: ${OMLAMI_IMG}
    container_name: oml-astami
    environment:
      - TZ=${TZ}
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
    restart: on-failure
    volumes:
      - ${REPO_PATH}/omlami/ami.py:/app/ami.py
    networks:
      - omnileads

  acd_config_retrieve:
    image: ${OMLACD_RETRIEVE_CONF_IMG}
    container_name: oml-asterisk-conf-retrieve
    depends_on:
      - nginx
      - redis
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ASTERISK_LOCATION=
      - ARI_HOST=acd
      - ARI_USER=omnileadsami
      - ARI_PASS=5_MeO_DMT
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - asterisk_conf:/home/omnileads/astconf
      - asterisk_sounds:/home/omnileads/sounds

  acd_config_retrieve:
    image: ${OMLACD_RETRIEVE_CONF_IMG}
    container_name: oml-asterisk-conf-retrieve    
    depends_on:      
      - nginx
      - redis
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ASTERISK_LOCATION=
      - ARI_HOST=acd
      - ARI_USER=omnileadsami
      - ARI_PASS=5_MeO_DMT
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - asterisk_conf:/home/omnileads/astconf
      - asterisk_sounds:/home/omnileads/sounds

  acd:
    build:
      target: run
      context: ${REPO_PATH}/omlacd
    image: ${OMLACD_IMG}
    container_name: oml-asterisk
    depends_on:
      - fastagi
    dns: 8.8.8.8
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_APPLICATION_CREDENTIALS=/tmp/google_credential.json
      - RABBITMQ_HOST=${RABBITMQ_HOSTNAME}
      - FASTAGI=${FASTAGI_HOSTNAME}
      - TZ=${TZ}
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}
      - HOMERHOST=${HOMERHOST}
      - HOMERPORT=${HOMERPORT}
      - HOMER_ENABLE=False
      - CALLREC_SPLIT_CHANNELS=${CALLREC_SPLIT_CHANNELS}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - ${REPO_PATH}/omlacd/source/astconf:/etc/asterisk
      - ${REPO_PATH}/omlacd/source/scripts:/opt/asterisk/scripts
      - ${REPO_PATH}/omlacd/source/agi-bin/:/var/lib/asterisk/agi-bin/
      #- ./asterisk_custom/google_credential.json:/tmp/google_credential.json
      #- ./asterisk_custom/oml_extensions_custom.conf:/etc/asterisk/oml_extensions_custom.conf
      - asterisk_callrec:/var/spool/asterisk/monitor/
      - asterisk_conf:/etc/asterisk/retrieve_conf
      - asterisk_sounds:/var/lib/asterisk/sounds/oml
    working_dir: /etc/asterisk

  acd_config_retrieve:
    image: ${OMLACD_RETRIEVE_CONF_IMG}
    container_name: oml-asterisk-conf-retrieve    
    depends_on:
      - websockets
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ASTERISK_LOCATION=
      - ARI_HOST=acd
      - ARI_USER=omnileadsami
      - ARI_PASS=5_MeO_DMT
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:      
      - asterisk_conf:/home/omnileads/astconf
      - asterisk_sounds:/home/omnileads/sounds
      - ${REPO_PATH}/acd_retrieve_conf/:/home/omnileads

  interaction_processor:
    build:
      target: run
      context: ${REPO_PATH}/oml_interactions_processor
    image: ${OMLINTERACTION_PROC_IMG}
    container_name: oml-interaction-proc
    depends_on:
      - minio
      - rabbitmq
      - acd
    dns: 8.8.8.8
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOSTNAME}
      - TZ=${TZ}
      - CALLREC_DEVICE=${CALLREC_DEVICE}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT_MINIO}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    command: python /app/app.py
    volumes:
      - ${REPO_PATH}/oml_interactions_processor/app.py:/app/app.py
      - asterisk_callrec:/var/spool/asterisk/monitor/

  dialer_acd:
    build:
      target: run
      context: ${REPO_PATH}/omldialer_acd
    image: ${OMLDIALER_ACD_IMG}
    container_name: oml-asterisk_dialer
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ACD_SIP_USER=${DIALER_ACD_SIP_USER}
      - ACD_SIP_PASS=${DIALER_ACD_SIP_PASS}
      - ACD_HOSTNAME=${ACD_SIP_TRUNK_ADDR}
      - ARI_USER=${AMI_USER}
      - ARI_PASS=${AMI_PASSWORD}
      - ASTERISK_DIALER_HOSTNAME=0.0.0.0
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    working_dir: /etc/asterisk

  dialer_call_manager:
    build:
      target: run
      context: ${REPO_PATH}/asterisk_ari
    depends_on:
      - dialer_acd
    image: ${OMLDIALER_CALL_MANAGER_IMG}
    container_name: oml-dialer_call_manager
    command: python /app/dialer_call_manager.py
    environment:
      - TZ=${TZ}
      - ARI_HOST=${DIALER_ACD_HOST}
      - ARI_PORT=8888
      - ARI_USER=${AMI_USER}
      - ARI_PASS=${AMI_PASSWORD}
    restart: on-failure
    networks:
      - omnileads
    volumes:
      - ${REPO_PATH}/omldialer_call_manager/:/app/
      

  # voice_queue_delivery:
  #   image: ${OMLFASTAGI_IMG}
  #   container_name: oml-voice_queue_delivery
  #   command: python /app/queue_call_delivery.py
  #   environment:
  #     - TZ=${TZ}
  #     - ARI_HOST=acd_dialer
  #     - ARI_PORT=7088
  #     - ARI_USER=omnileads
  #     - ARI_PASS=5_MeO_DMT
  #     - ARI_APP=call_manager
  #     - REDIS_HOSTNAME=${REDIS_HOSTNAME}
  #     - RABBITMQ_HOSTNAME=rabbitmq      
  #   restart: on-failure  
  #   volumes:
  #    - ${REPO_PATH}/asterisk_ari:/app
  #   networks:
  #     - omnileads  

  # acd_call_linker:
  #   image: ${OMLFASTAGI_IMG}
  #   container_name: oml-call_linker
  #   command: python /app/call_linker.py
  #   environment:
  #     - TZ=${TZ}
  #     - ARI_HOST=acd
  #     - ARI_PORT=7088
  #     - ARI_USER=omnileads
  #     - ARI_PASS=5_MeO_DMT
  #     - REDIS_HOSTNAME=${REDIS_HOSTNAME}
  #     - RABBITMQ_HOSTNAME=rabbitmq
  #   restart: on-failure  
  #   volumes:
  #    - ${REPO_PATH}/asterisk_ari:/app
  #   networks:
  #     - omnileads  

  # sentiment_analysis:
  #   image: ${OMLSENTIMENT_IMG}
  #   container_name: oml-sentiment_analysis
  #   depends_on:
  #     - postgresql
  #     - minio
  #     - rabbitmq
  #   dns: 8.8.8.8
  #   environment:
  #     - OPENAI_API_KEY=${OPENAI_API_KEY}
  #     - GOOGLE_API_KEY=${GOOGLE_API_KEY}
  #     - GOOGLE_APPLICATION_CREDENTIALS=/tmp/google_credential.json
  #     - RABBITMQ_HOST=${RABBITMQ_HOSTNAME}
  #     - TZ=${TZ}
  #     - PGHOST=${PGHOST}
  #     - PGPORT=${PGPORT}
  #     - PGUSER=${PGUSER}
  #     - PGDATABASE=${PGDATABASE}
  #     - PGPASSWORD=${PGPASSWORD}
  #     - S3_BUCKET_NAME=${S3_BUCKET_NAME}
  #     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  #     - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  #     - S3_ENDPOINT=${S3_ENDPOINT_MINIO}
  #     - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
  #     - LANG=es
  #     - GCP_PROJECT_ID=${GOOGLE_CLOUD_PROJECTID}
  #   networks:
  #     - omnileads
  #   privileged: true
  #   command: python /app/app_${MODEL}.py
  #   restart: on-failure
  #   stop_grace_period: 1m30s
  #   volumes:
  #     - ./asterisk_custom/google_credential.json:/tmp/google_credential.json
  #     - ${REPO_PATH}/oml_sentiment_analysis/:/app/

  # audiosocket:
  #   build:
  #     #target: run
  #     context: ${REPO_PATH}/oml_audiosocket
  #   image: audiosocket
  #   container_name: oml-audiosocket
  #   depends_on:
  #     - acd
  #   dns: 8.8.8.8
  #   environment:
  #     - TZ=${TZ}
  #   networks:
  #     - omnileads
  #   privileged: true
  #   restart: on-failure
  #   stop_grace_period: 1m30s
  #   #command: sleep 3600

  kamailio:
    build:
      target: run
      context: ${REPO_PATH}/omlkamailio
    image: ${OMLKAM_IMG}
    container_name: oml-kamailio
    depends_on:
      - redis
      - acd
      - rtpengine
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - AUTHEPH_SK=${AUTHEPH_SK}
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - RTPENGINE_HOSTNAME=${RTPENGINE_HOSTNAME}
      - SHM_SIZE=${SHM_SIZE}
      - PKG_SIZE=${PKG_SIZE}
      - KAMAILIO_CERTS_LOCATION=${KAMAILIO_CERTS_LOCATION}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - ${REPO_PATH}/omlkamailio/source:/etc/kamailio:ro

  nginx:
    build:
      target: run
      context: ${REPO_PATH}/omlnginx
    image: ${OMLNGINX_IMG}
    container_name: oml-nginx
    depends_on:
      - app
      - kamailio
      - websockets
    dns: 8.8.8.8
    environment:
      - ENV=devenv
      - TZ=${TZ}
      - DJANGO_HOSTNAME=${DJANGO_HOSTNAME}
      - WSGI_PORT=8099
      - DAPHNE_HOSTNAME=${DJANGO_HOSTNAME}
      - ASGI_PORT=8099
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - KAMAILIO_PORT=14443
      - WEBSOCKETS_HOSTNAME=${WEBSOCKET_HOSTNAME}
      - WEBSOCKETS_PORT=8000
      - CALLREC_DEVICE=${CALLREC_DEVICE}
      - S3_ENDPOINT=${S3_ENDPOINT_MINIO}
    networks:
      - omnileads
    privileged: true
    ports:
      - ${NGINX_EXT_PORT}:443/tcp
    restart: on-failure
    stop_grace_period: 15s
    volumes:
      - django_static:/opt/omnileads/static
      - ${REPO_PATH}/omlnginx/source/conf:/etc/nginx/
      - ${REPO_PATH}/omlnginx/source/set_environment.sh:/docker-entrypoint.d/set_environment.sh
      - django_callrec_zip:/opt/omnileads/asterisk/var/spool/asterisk/monitor

  postgresql:
    build:
      target: run
      context: ${REPO_PATH}/omlpgsql
    container_name: oml-postgres
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    image: ${OMLPGSQL_IMG}
    networks:
      - omnileads
    ports:
      - ${PG_EXT_PORT}:5432/tcp
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - postgresql:/var/lib/postgresql/data

  redis:
    container_name: oml-redis
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - BIND_IP=0.0.0.0
    networks:
      - omnileads
    ports:
      - 16379:6379
    image: ${OMLREDIS_IMG}
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - redis:/data

  rtpengine:
    build:
      target: run
      context: ${REPO_PATH}/omlrtpengine
    image: ${OMLRTPENGINE_IMG}
    container_name: oml-rtpengine
    dns: 8.8.8.8
    environment:
      - ENV=devenv
      - TZ=${TZ}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s

  websockets:
    tty: true
    container_name: oml-websockets
    image: ${OMLWS_IMG}
    depends_on:
      - redis
    environment:
      - BIND_ADDRESS=0.0.0.0:8000
      - EVENT_LOOP=uvloop
      - LOGGERS=${WEBSOCKET_LOGGER}
      - REDIS_HOST=${WEBSOCKET_REDIS_HOSTNAME}
      - PYTHONUNBUFFERED=1
    networks:
      - omnileads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health-checks"]
      interval: 1s
      timeout: 10s
      retries: 10
    volumes:
      - ${REPO_PATH}/omlwebsockets/source/:/opt/services/webapp/src/

  mariadb:
    container_name: oml-mariadb
    dns: 8.8.8.8
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - TZ=${TZ}
      - MARIADB_ROOT_PASSWORD=${MYSQL_ROOT_PASS}
      - MARIADB_DATABASE=${WOMBAT_DB}
      - MARIADB_USER=${WOMBAT_DB_USER}
      - MARIADB_PASSWORD=${WOMBAT_DB_PASS}
    image: ${MARIADB_IMG}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - mariadb:/bitnami

  wombat:
    command: >
      bash -c "sed -i '/JDBC_URL/c\JDBC_URL=jdbc:mariadb:\/\/${MYSQL_HOST}\/${WOMBAT_DB}?user=${WOMBAT_DB_USER}&password=${WOMBAT_DB_PASS}&autoReconnect=true' /usr/local/tomcat/webapps/wombat/WEB-INF/tpf.properties && catalina.sh run"
    container_name: oml-wombat
    depends_on:
      - mariadb
      - acd
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - MYSQL_PWD=${MYSQL_ROOT_PASS}
    image: ${WOMBAT_IMG}
    networks:
      - omnileads
    ports:
      - 8082:8080/tcp
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s

  vue-cli:
    tty: true
    container_name: oml-vuejs-cli
    image: ${OMLVUEJS_IMG}
    #environment:
    #  - NODE_OPTIONS=--openssl-legacy-provider
    ports:
      - 8081:8080
    networks:
      - omnileads
    volumes:
      - ${REPO_PATH}/omlapp/omnileads_ui/:/home/oml_frontend/
      #- ${REPO_PATH}/omlapp/omnileads_ui/:/home/app
      - ${REPO_PATH}/survey_app/:/home/survey/
      - ${REPO_PATH}/wallboard_app/:/home/wallboard/
      - vuejs:/home/app/supervision/node_modules/

  rabbitmq:
    container_name: oml-rabbit-mq
    image: rabbitmq:management
    networks:
      - omnileads
    ports:
      - "15672:15672"
      - "5672:5672"

  minio:
    tty: true
    container_name: oml-minio
    image: ${OMLMINIO_IMG}
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${S3_HTTP_ADMIN_USER}
      - MINIO_ROOT_PASSWORD=${S3_HTTP_ADMIN_PASS}
      #- MINIO_SERVER_URL=${S3_ENDPOINT}
      - MINIO_PROMETHEUS_AUTH_TYPE="public"
    networks:
      - omnileads
    ports:
      - 9001:9001
      - 9000:9000
    volumes:
      - minio:/data
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    #   interval: 30s
    #   timeout: 20s
    #   retries: 3

  createbuckets:
    tty: true
    image: minio/mc
    container_name: oml-initminio
    depends_on:
      - minio
    networks:
      - omnileads
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host rm local;
      /usr/bin/mc config host add --quiet --api s3v4 local http://minio:9000 minio s3minio123;
      /usr/bin/mc mb --quiet local/omnileads/;
      /usr/bin/mc admin user add local omlminio s3omnileads123;
      /usr/bin/mc admin policy attach local readwrite --user omlminio;
      exit 0;
      "

  pbxemulator:
    container_name: oml-pstn-emulator
    hostname: pbxemulator
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
    image: ${OMLPSTNEMULATOR_IMG}
    networks:
      - omnileads
    ports:
      - 4569:4569/udp
    volumes:
      - ./pstn_emulator_custom_conf:/etc/asterisk/custom/
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true

  nginxcgi:
    container_name: oml-nginx-cgi
    hostname: nginxcgi
    dns: 8.8.8.8
    image: omnileads/nginxqa:latest
    environment:
      - PGHOST=${PGHOST}
      - PGPASSWORD=${PGPASSWORD}
      - PSTN_HOSTNAME=pbxemulator
    networks:
      - omnileads
    ports:
      - 8888:8888
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true

  videocalls:
    container_name: oml-videocalls-widget
    dns: 8.8.8.8
    image: ${OMLVIDEOCALLS_WIDGET_IMG}
    environment:
      - CLIENT_USERNAME=${VIDEOCALLS_USERNAME}
      - CLIENT_PASSWORD=${VIDEOCALLS_PASSWORD}
    networks:
      - omnileads
    ports:
      - 8889:5000
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true
    volumes:
      - ${REPO_PATH}/webphone_client_app/demo/:/usr/src/app

  pgadmin:
    container_name: pgadmin-container
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: catsarecool
    restart: on-failure
    networks:
      - omnileads

networks:
  omnileads:
    ipam:
      driver: default
      config:
        - subnet: "${SUBNET}"

volumes:
  postgresql:
  mariadb:
  redis:
  minio:
  django_static:
  django_callrec_zip:
  vuejs:
  asterisk_callrec:
  asterisk_sounds:
  asterisk_conf:
