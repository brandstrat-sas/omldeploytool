version: '3.8'
services:
  app:
    build:
      target: run
      context: ${REPO_PATH}/omlapp
    container_name: oml-django
    depends_on:
      - postgresql
      - redis
      - acd
      - minio
    dns: 8.8.8.8
    environment:
      - CRON_ENABLE=false
      - TZ=${TZ}
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - PGHOST=${PGHOST}
      - PGDATABASE=${PGDATABASE}
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOSTHA=${PGHOSTHA}
      - PGHOSTRO=${PGHOSTRO}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - WEBSOCKET_HOST=${WEBSOCKET_HOSTNAME}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT}
      - CALIFICACION_REAGENDA=${CALIFICACION_REAGENDA}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - EPHEMERAL_USER_TTL=${EPHEMERAL_USER_TTL}
      - INSTALL_PREFIX=${INSTALL_PREFIX}
      - LOGIN_FAILURE_LIMIT=${LOGIN_FAILURE_LIMIT}
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
      - PYTHONPATH=${PYTHONPATH}
      - SESSION_COOKIE_AGE=${SESSION_COOKIE_AGE}
      - CALLREC_DEVICE=${CALLREC_DEVICE}
      - MONITORFORMAT=${MONITORFORMAT}
      - S3_STORAGE_ENABLED=true
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ENDPOINT_MINIO=${S3_ENDPOINT_MINIO}
      - AWS_DEFAULT_REGION=us-east-1
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - GOOGLE_MAPS_CENTER='${GOOGLE_MAPS_CENTER}'
      - EMAIL_BACKEND=django.core.mail.backends.dummy.EmailBackend
      - OML_BRANCH=${OML_BRANCH}
      - OML_COMMIT=${OML_COMMIT}
      - OML_BUILD_DATE=${OML_BUILD_DATE}
      - WOMBAT_HOSTNAME=wombat
      - WOMBAT_USER=${WOMBAT_USER}
      - WOMBAT_PASSWORD=${WOMBAT_PASSWORD}
      - OML_LOGGING_SLOWSQL_ENABLED=
      - OML_LOGGING_SLOWSQL_OUTPUT="-"
      - OML_LOGGING_SLOWSQL_DURATION=1
      #- SURVEY_VERSION=develop
      #- WALLBOARD_VERSION=develop
      #- PREMIUM_REPORTS_VERSION=develop
    image: ${OMLAPP_IMG}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true
    working_dir: /opt/omnileads/ominicontacto
    volumes:      
      - django_callrec_zip:/opt/omnileads/asterisk/var/spool/asterisk/monitor
      - ${REPO_PATH}/omlapp/:/opt/omnileads/ominicontacto/
      #- ${REPO_PATH}/survey_app/:/opt/omnileads/ominicontacto/survey_app
      #- ${REPO_PATH}/wallboard_app/:/opt/omnileads/ominicontacto/wallboard_app
      #- ${REPO_PATH}/premium_reports_app/:/opt/omnileads/ominicontacto/premium_reports_app

  crones:
    container_name: oml-django-cron
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - PGHOST=${PGHOST}
      - PGDATABASE=${PGDATABASE}
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOSTHA=${PGHOSTHA}
      - PGHOSTRO=${PGHOSTRO}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - WEBSOCKET_HOST=${WEBSOCKET_HOSTNAME}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT}
      - CALIFICACION_REAGENDA=${CALIFICACION_REAGENDA}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - EPHEMERAL_USER_TTL=${EPHEMERAL_USER_TTL}
      - INSTALL_PREFIX=${INSTALL_PREFIX}
      - LOGIN_FAILURE_LIMIT=${LOGIN_FAILURE_LIMIT}
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
      - PYTHONPATH=${PYTHONPATH}
      - SESSION_COOKIE_AGE=${SESSION_COOKIE_AGE}
      - CALLREC_DEVICE=${CALLREC_DEVICE}
      - MONITORFORMAT=${MONITORFORMAT}
      - S3_STORAGE_ENABLED=true
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT_MINIO}
      - AWS_DEFAULT_REGION=us-east-1
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - GOOGLE_MAPS_CENTER='${GOOGLE_MAPS_CENTER}'
      - EMAIL_BACKEND=django.core.mail.backends.dummy.EmailBackend
      - OML_BRANCH=${OML_BRANCH}
      - OML_COMMIT=${OML_COMMIT}
      - OML_BUILD_DATE=${OML_BUILD_DATE}
      - WOMBAT_HOSTNAME=localhost
      - WOMBAT_USER=${WOMBAT_USER}
      - WOMBAT_PASSWORD=${WOMBAT_PASSWORD}
      - OML_LOGGING_SLOWSQL_ENABLED=
      - OML_LOGGING_SLOWSQL_OUTPUT="-"
      - OML_LOGGING_SLOWSQL_DURATION=1
    image: ${OMLAPP_IMG}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true
    working_dir: /opt/omnileads/

  acd:
    build:
      target: run
      context: ${REPO_PATH}/omlacd
    container_name: oml-asterisk
    depends_on:
      - postgresql
      - redis
      - minio
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ASTERISK_LOCATION=${ASTERISK_LOCATION}
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - PGHOST=${PGHOST}
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGDATABASE=${PGDATABASE}
      - PGPASSWORD=${PGPASSWORD}
      - CALLREC_DEVICE=${CALLREC_DEVICE}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT_MINIO}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - HOMERHOST=${HOMERHOST}
      - HOMERPORT=${HOMERPORT}
      - HOMER_ENABLE=True
      - NETWORK_MODE=bridge
    image: ${OMLACD_IMG}
    networks:
      - omnileads
    ports:
      - ${SIP_EXT_PORT}:5060/udp
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - ./ast_custom_conf:/etc/asterisk/custom
      - ${REPO_PATH}/omlacd/source/astconf:/etc/asterisk/
      - ${REPO_PATH}/omlacd/source/agis:/var/lib/asterisk/agi-bin/
      - ${REPO_PATH}/omlacd/source/scripts:/etc/asterisk/virtualenv/scripts
    working_dir: /etc/asterisk

  kamailio:
    build:
      target: run
      context: ${REPO_PATH}/omlkamailio
    command:
      - /bin/bash
    container_name: oml-kamailio
    depends_on:
      - redis
      - acd
      - rtpengine
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - AUTHEPH_SK=${AUTHEPH_SK}
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - RTPENGINE_HOSTNAME=${RTPENGINE_HOSTNAME}
      - SHM_SIZE=${SHM_SIZE}
      - PKG_SIZE=${PKG_SIZE}
      - KAMAILIO_CERTS_LOCATION=${KAMAILIO_CERTS_LOCATION}
    image: ${OMLKAM_IMG}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - ./certs:/${KAMAILIO_CERTS_LOCATION}
      - ${REPO_PATH}/omlkamailio/source:/etc/kamailio

  nginx:
    build:
      target: run
      context: ${REPO_PATH}/omlnginx
    container_name: oml-nginx
    depends_on:
      - app
      - kamailio
      - websockets
    dns: 8.8.8.8
    environment:
      - CALLREC_DEVICE=${CALLREC_DEVICE}
      - TZ=${TZ}
      - ENV=devenv
      - DJANGO_HOSTNAME=${DJANGO_HOSTNAME}
      - DAPHNE_HOSTNAME=${DJANGO_HOSTNAME}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - WEBSOCKETS_HOSTNAME=${WEBSOCKET_HOSTNAME}
      - S3_ENDPOINT=${S3_ENDPOINT_MINIO}
    image: ${OMLNGINX_IMG}
    networks:
      - omnileads
    privileged: true
    ports:
      - ${NGINX_EXT_PORT}:443/tcp
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - django_static:/opt/omnileads/static
      - ${REPO_PATH}/omlnginx/source/conf:/etc/nginx/
      - django_callrec_zip:/opt/omnileads/asterisk/var/spool/asterisk/monitor

  postgresql:
    build:
      target: run
      context: ${REPO_PATH}/omlpgsql
    container_name: oml-postgres
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    image: ${OMLPGSQL_IMG}
    networks:
      - omnileads
    ports:
      - ${PG_EXT_PORT}:5432/tcp
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - postgresql_persistent:/var/lib/postgresql/data

  redis:
    container_name: oml-redis
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
    networks:
      - omnileads
    image: ${OMLREDISGEARS_IMG}
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - redis_persistent:/data

  rtpengine:
    build:
      target: run
      context: ${REPO_PATH}/omlrtpengine
    container_name: oml-rtpengine
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ENV=devenv
    image: ${OMLRTPENGINE_IMG}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s

  websockets:
    tty: true
    container_name: oml-websockets
    image: ${OMLWS_IMG}
    depends_on:
      - redis
    environment:
      - BIND_ADDRESS=0.0.0.0:8000
      - EVENT_LOOP=uvloop
      - LOGGERS=${WEBSOCKET_LOGGER}
      - REDIS_HOST=${WEBSOCKET_REDIS_HOSTNAME}
      - PYTHONUNBUFFERED=1
    ports:
      - "${WEBSOCKET_EXT_PORT}:8000"
    networks:
      - omnileads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health-checks"]
      interval: 1s
      timeout: 10s
      retries: 10
    volumes:
      - ${REPO_PATH}/omlwebsockets/source/:/opt/services/webapp/src/

  mariadb:
    container_name: oml-mariadb
    dns: 8.8.8.8
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - TZ=${TZ}
      - MARIADB_ROOT_PASSWORD=${MYSQL_ROOT_PASS}
      - MARIADB_DATABASE=${WOMBAT_DB}
      - MARIADB_USER=${WOMBAT_DB_USER}
      - MARIADB_PASSWORD=${WOMBAT_DB_PASS}
    image: ${MARIADB_IMG}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - mariadb_persistent:/bitnami

  wombat:
    command: >
      bash -c "sed -i '/JDBC_URL/c\JDBC_URL=jdbc:mariadb:\/\/${MYSQL_HOST}\/${WOMBAT_DB}?user=${WOMBAT_DB_USER}&password=${WOMBAT_DB_PASS}&autoReconnect=true' /usr/local/tomcat/webapps/wombat/WEB-INF/tpf.properties && catalina.sh run"
    container_name: oml-wombat
    depends_on:
      - mariadb
      - acd
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - MYSQL_PWD=${MYSQL_ROOT_PASS}
    image: ${WOMBAT_IMG}
    networks:
      - omnileads
    ports:
      - 8082:8080/tcp
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s

  vue-cli:
    tty: true
    container_name: oml-vuejs-cli
    image: ${OMLVUEJS_IMG}
    ports:
      - 8080:8080
    networks:
      - omnileads
    volumes:
      - ${REPO_PATH}/omlapp/omnileads_ui/:/home/app/
      #- ${REPO_PATH}/survey_app/:/home/survey/
      #- ${REPO_PATH}/wallboard_app/:/home/wallboard/
      - vuejs_persistent:/home/app/supervision/node_modules/

  minio:
    tty: true
    container_name: oml-minio
    image: ${OMLMINIO_IMG}
    command: server --console-address "localhost:9001" /data
    environment:
      - MINIO_ROOT_USER=${S3_HTTP_ADMIN_USER}
      - MINIO_ROOT_PASSWORD=${S3_HTTP_ADMIN_PASS}
      - MINIO_SERVER_URL=${S3_ENDPOINT}
      - MINIO_PROMETHEUS_AUTH_TYPE="public"
    networks:
      - omnileads
    ports:
      - 9001:9001
      - 9000:9000
    volumes:
      - minio_persistent:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  pbxemulator:
    container_name: oml-pstn-emulator
    hostname: pbxemulator
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
    image: ${OMLPSTNEMULATOR_IMG}
    networks:
      - omnileads
    ports:
      - 6060:5060/udp
      - 10000-10020:10000-10020/udp
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true

networks:
  omnileads:
    ipam:
      driver: default
      config:
        - subnet: "${SUBNET}"

volumes:
  postgresql_persistent:
  mariadb_persistent:
  redis_persistent:
  minio_persistent:
  django_static:
  django_callrec_zip:
  vuejs_persistent:
  ast_conf:
  ast_sounds:
  ast_moh:
