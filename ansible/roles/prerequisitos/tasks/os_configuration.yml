# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

# - name: Disable ufw
#   systemd:
#     name: ufw
#     state: stopped
#     enabled: no
#     daemon_reload: yes
#   ignore_errors: yes
#
# - name: Disable firewallD
#   systemd:
#     name: firewalld
#     state: stopped
#     enabled: no
#     daemon_reload: yes
#   ignore_errors: yes

- name: OS CONFIGS Install required Debian packages
  apt:
    name:
      - curl
      - net-tools
      - podman
      - wget
      - jq
      - sngrep
      - awscli
      - python3-boto3
      - python3-psycopg2
      - postgresql-client
    update_cache: yes
    state: latest
  tags: install
  when: ansible_distribution == "Debian"

- name: OS CONFIGS Enable EPEL Repository on Rocky Linux
  dnf:
    name: epel-release
    state: latest
  tags: install
  when: ansible_distribution == "Rocky"

- name: OS CONFIGS enable postgres dnf module ROCKY
  command: 'dnf -y module enable postgresql:{{ postgres_version }}'
  tags: install
  when: ansible_distribution == "Rocky"

- name: OS CONFIGS Install required Rocky Linux packages
  dnf:
    name:
      - python3
      - python3-pip
      - podman
      - jq
      - postgresql
      - python3-psycopg2
      - python3-boto3
      - awscli
    state: latest
  tags: install
  when: ansible_distribution == "Rocky"

- name: OS CONFIGS Disable SELinux Rocky Linux
  selinux:
    state: disabled
  tags: install
  when: ansible_distribution == "Rocky"

- name: OS CONFIGS Stop service firewalld Rocky Linux
  systemd:
    name: firewalld
    state: stopped
    enabled: no
  tags: install
  when: ansible_distribution == "Rocky"

- name: Ensure group {{ usuario }} exists
  group:
    name: '{{ usuario }}'
    state: present
  tags: install

- name: Add the {{ usuario }} user
  user:
    name: '{{ usuario }}'
    group: '{{ usuario }}'
    comment: OMniLeads OS user
    shell: /bin/bash
    home: '{{ django_deploy_path }}'
  tags: install

- name: Creates /etc/omnileads directory
  file:
    path: /etc/omnileads
    state: directory
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0764
    recurse: yes
  when: etc_omnileads.stat.exists == false
  tags: install

- name: Creates /etc/omnileads/certs directory
  file:
    path: '{{ certs_location }}'
    state: directory
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0764
  when: etc_omnileads.stat.exists == false
  tags: install

- name: Creates /var/lib/omnileads directory
  file:
    path: '{{ asterisk_sounds_host_path }}'
    state: directory
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0764
    recurse: yes
  when: var_lib_omnileads.stat.exists == false
  tags:
    - install

- name: Creates /var/lib/omnileads/minio directory
  file:
    path: '{{ minio_persistent_path }}'
    state: directory
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0764
    recurse: yes
  when: var_lib_omnileads_minio.stat.exists == false
  tags:
    - install

- name: Creates /var/lib/omnileads/pgsql directory
  file:
    path: '{{ postgres_persistent_path }}'
    state: directory
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0764
    recurse: yes
  when: var_lib_omnileads_pgsql.stat.exists == false
  tags:
    - install

- name: Copy SSL certs
  copy:
    src: "certs/cert.pem"
    dest: /etc/omnileads/certs/cert.pem
    owner: omnileads
    group: omnileads
    mode: 0777
  tags:
    - install
    - nginx
    - kamailio
    - asterisk

- name: Copy SSL certs
  copy:
    src: "templates/bashrc"
    dest: /root/.bashrc
    owner: omnileads
    group: omnileads
    mode: 0777
  tags:
    - install

- name: Copy SSL certs
  copy:
    src: "certs/key.pem"
    dest: /etc/omnileads/certs/key.pem
    owner: "{{ usuario }}"
    group: "{{ usuario }}"
    mode: 0777
  tags:
    - app
    - aio
    - nginx
    - kamailio
    - asterisk

- name: Copy oml_manage script
  template:
    src: "templates/oml_manage.sh"
    dest: /usr/local/bin/oml_manage.sh
    mode: 0755

# Se setea el timezone
- name: Set timezone of server
  timezone: name={{ TZ }}
  tags: install
