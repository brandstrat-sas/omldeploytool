# Copyright (C) 2023 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

- name: OS_CONF Disable ufw
  systemd:
    name: ufw
    state: stopped
    enabled: no
    daemon_reload: yes
  ignore_errors: yes
  tags: 
    - install
    
- name: OS_CONF Disable firewallD
  systemd:
    name: firewalld
    state: stopped
    enabled: no
    daemon_reload: yes
  ignore_errors: yes
  tags: 
    - install
          
- name: MAIN Disable SELinux Rocky or Alma Linux
  command: setenforce 0
  tags:
    - install
  when: ansible_facts['distribution'] == "Rocky" or ansible_facts['distribution'] == "AlmaLinux"  or ansible_facts['distribution'] == "CentOS"
  ignore_errors: yes
  
- name: OS_CONF Ensure group {{ usuario }} exists
  group:
    name: '{{ usuario }}'
    state: present
  tags: 
    - install

- name: OS_CONF Add the {{ usuario }} user
  user:
    name: '{{ usuario }}'
    group: '{{ usuario }}'
    comment: OMniLeads OS user
    shell: /bin/bash
    home: '{{ django_deploy_path }}'
  tags: 
    - install

- name: OS_CONF Creates /etc/omnileads directory
  file:
    path: /etc/omnileads
    state: directory
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0764
    recurse: yes
  when: etc_omnileads.stat.exists == false
  tags: 
    - install

- name: OS_CONF Creates /etc/omnileads/certs directory
  file:
    path: '{{ certs_location }}'
    state: directory
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0764
  when: etc_omnileads.stat.exists == false
  tags: 
    - install

- name: OS_CONF Creates /var/lib/omnileads directory
  file:
    path: '{{ asterisk_sounds_host_path }}'
    state: directory
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0764
    recurse: yes
  when: var_lib_omnileads.stat.exists == false
  tags: 
    - install

- name: OS_CONF Copy selfsigned SSL certs
  copy:
    src: "certs/cert.pem"
    dest: /etc/omnileads/certs/cert.pem
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0777
  tags: 
    - install
    - upgrade
  when:
    - certs == "selfsigned"

- name: OS_CONF Copy selfsigned SSL certs
  copy:
    src: "certs/key.pem"
    dest: /etc/omnileads/certs/key.pem
    owner: "{{ usuario }}"
    group: "{{ usuario }}"
    mode: 0777
  tags: 
    - install
    - upgrade
  when:
    - certs == "selfsigned"

- name: OS_CONF Copy custom SSL cert.pem
  copy:
    src: "../../../instances/{{ tenant_folder }}/cert.pem"
    dest: /etc/omnileads/certs/cert.pem
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0777
  tags: 
    - install
    - upgrade
  when:
    - certs == "custom"
    - cert_file_name is not defined

- name: OS_CONF Copy custom tenant SSL cert.pem
  copy:
    src: "../../../instances/{{ tenant_folder }}/{{ cert_file_name }}"
    dest: /etc/omnileads/certs/cert.pem
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0777
  tags: 
    - install
    - upgrade
  when:
    - cert_file_name is defined

- name: OS_CONF Copy custom SSL key.pem
  copy:
    src: "../../../instances/{{ tenant_folder }}/key.pem"
    dest: /etc/omnileads/certs/key.pem
    owner: "{{ usuario }}"
    group: "{{ usuario }}"
    mode: 0777
  tags: 
    - install
    - upgrade
  when:
    - certs == "custom"
    - key_file_name is not defined

- name: OS_CONF Copy custom tenant SSL key.pem
  copy:
    src: "../../../instances/{{ tenant_folder }}/{{ key_file_name }}"
    dest: /etc/omnileads/certs/key.pem
    owner: "{{ usuario }}"
    group: "{{ usuario }}"
    mode: 0777
  tags: 
    - install
    - upgrade
  when:
    - key_file_name is defined

- name: OS_CONF CERTBOT Create directories for Certbot
  become: yes
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /opt/certbot/
    - /opt/certbot/webroot
    - /opt/certbot/letsencrypt
  tags:
    - install
  when: certs == "certbot"

- name: OS_CONF CERTBOT launch container to generate lets & crypt Certs
  become: yes
  when: certs == "certbot"
  
  shell: "podman run -it --rm --name nginx-certbot -e FQDN={{ fqdn }} -e EMAIL={{ notification_email }} -e RENEW_CERTIFICATE=false -v '/opt/certbot/letsencrypt:/etc/letsencrypt' -v '/opt/certbot/webroot:/var/www/certbot' -p 80:80 docker.io/omnileads/certbot:240201.01"
  tags:
    - install  
  when:
    - certs == "certbot"  

- name: OS_CONF CERTBOT SSL Cert Copy
  become: yes
  copy:
    src: "/opt/certbot/letsencrypt/archive/{{ fqdn }}/cert1.pem"
    dest: "/etc/omnileads/certs/cert.pem"
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0777
    remote_src: yes
  tags:
    - install
  when:
    - certs == "certbot"  

- name: OS_CONF CERTBOT SSL Key Copy
  become: yes
  copy:
    src: "/opt/certbot/letsencrypt/archive/{{ fqdn }}/privkey1.pem"
    dest: "/etc/omnileads/certs/key.pem"
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0777
    remote_src: yes
  tags:
    - install    
  when:
    - certs == "certbot"  

- name: OS_CONF Copy oml_manage script
  template:
    src: "templates/oml_manage.sh"
    dest: /usr/local/bin/oml_manage
    mode: 0755
  tags: 
    - install
    - upgrade
    - update

- name: OS_CONF Set timezone of server
  timezone: name={{ TZ }}
  tags: 
    - install
    - upgrade

- name: OS_CONF Copy Prometheus Node Exporter service
  template:
    src: "templates/prometheus_node_exporter.service"
    dest: /etc/systemd/system/
    mode: 0600
  tags: 
    - install
    - upgrade
  when: 
    - inventory_hostname not in groups['ha_omnileads_sql']

- name: OS_CONF Copy Prometheus CENTOS7 Node Exporter service
  template:
    src: "templates/prometheus_node_exporter_centos7.service"
    dest: /etc/systemd/system/prometheus_node_exporter.service
    mode: 0600
  tags: 
    - install
    - upgrade
  when: 
    - inventory_hostname in groups['ha_omnileads_sql']

- name: OS_CONF Copy Prometheus Node Exporter env
  template:
    src: "templates/prometheus_node_exporter.env"
    dest: /etc/default/
    mode: 0600
  tags: 
    - install
    - upgrade  

- name: OS_CONF Enable and start systemd Prometheus Node Exporter service
  systemd:
    name: prometheus_node_exporter
    state: restarted
    enabled: yes
    daemon_reload: yes
  tags: 
    - install
    - upgrade
  when: 
     #- inventory_hostname not in groups['ha_omnileads_sql']
     - redis_host_ha is not defined
     - docker_compose is not defined

- name: OS_CONF Set Storage volatile journald.conf
  lineinfile:
    path: /etc/systemd/journald.conf
    regexp: '^#Storage='
    line: 'Storage=volatile'
  tags: 
    - install
    - upgrade

- name: OS_CONF Set RuntimeMaxUse journald.conf
  lineinfile:
    path: /etc/systemd/journald.conf
    regexp: '^RuntimeMaxUse=' 
    line: 'RuntimeMaxUse={{ journald_runtime_max_use }}'
  tags: 
    - install
    - upgrade

- name: OS_CONF Set RuntimeKeepFree journald.conf
  lineinfile:
    path: /etc/systemd/journald.conf
    regexp: '^SRuntimeKeepFree=' 
    line: 'RuntimeKeepFree={{ journald_runtime_keep_free }}'
  tags: 
    - install
    - upgrade

- name: OS_CONF restart systemd-journald
  service:
    name: systemd-journald
    state: restarted
  tags: 
    - install
    - upgrade

- name: OS_CONF stop OMniLeads App for Upgrade
  systemd:
    name: omnileads.service
    state: restarted
    enabled: yes
    daemon_reload: yes
  tags:
    - upgrade
  when:       
    - inventory_hostname in groups['omnileads_app'] or inventory_hostname in groups['omnileads_aio']  
    
