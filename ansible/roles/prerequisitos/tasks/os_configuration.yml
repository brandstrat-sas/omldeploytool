# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

- name: OS_CONF Disable ufw
  systemd:
    name: ufw
    state: stopped
    enabled: no
    daemon_reload: yes
  ignore_errors: yes
  tags:
    - install

- name: OS_CONF Disable firewallD
  systemd:
    name: firewalld
    state: stopped
    enabled: no
    daemon_reload: yes
  ignore_errors: yes
  tags:
    - install

- name: OS_CONF Ensure group {{ usuario }} exists
  group:
    name: '{{ usuario }}'
    state: present
  tags: install

- name: OS_CONF Add the {{ usuario }} user
  user:
    name: '{{ usuario }}'
    group: '{{ usuario }}'
    comment: OMniLeads OS user
    shell: /bin/bash
    home: '{{ django_deploy_path }}'
  tags: install

- name: OS_CONF Creates /etc/omnileads directory
  file:
    path: /etc/omnileads
    state: directory
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0764
    recurse: yes
  when: etc_omnileads.stat.exists == false
  tags: install

- name: OS_CONF Creates /etc/omnileads/certs directory
  file:
    path: '{{ certs_location }}'
    state: directory
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0764
  when: etc_omnileads.stat.exists == false
  tags: install

- name: OS_CONF Creates /var/lib/omnileads directory
  file:
    path: '{{ asterisk_sounds_host_path }}'
    state: directory
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0764
    recurse: yes
  when: var_lib_omnileads.stat.exists == false
  tags:
    - install

- name: OS_CONF Creates /var/lib/omnileads/minio directory
  file:
    path: '{{ minio_persistent_path }}'
    state: directory
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0764
    recurse: yes
  when: var_lib_omnileads_minio.stat.exists == false
  tags:
    - install

- name: OS_CONF Creates /var/lib/omnileads/pgsql directory
  file:
    path: '{{ postgres_persistent_path }}'
    state: directory
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0764
    recurse: yes
  when: var_lib_omnileads_pgsql.stat.exists == false
  tags:
    - install

# - name: OS_CONF Copy bashrc for alias
#   copy:
#     src: "templates/bashrc"
#     dest: /root/.bashrc
#     owner: '{{ usuario }}'
#     group: '{{ usuario }}'
#     mode: 0777
#   tags:
#     - install

- name: OS_CONF Copy selfsigned SSL certs
  copy:
    src: "certs/cert.pem"
    dest: /etc/omnileads/certs/cert.pem
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0777
  tags:
    - install
    - upgrade
  when:
    - certs == "selfsigned"

- name: OS_CONF Copy custom SSL certs
  copy:
    src: "../../../instances/{{ tenant_folder }}/cert.pem"
    dest: /etc/omnileads/certs/cert.pem
    owner: '{{ usuario }}'
    group: '{{ usuario }}'
    mode: 0777
  tags:
    - install
    - upgrade
  when:
    - certs == "custom"

- name: OS_CONF Copy selfsigned SSL certs
  copy:
    src: "certs/key.pem"
    dest: /etc/omnileads/certs/key.pem
    owner: "{{ usuario }}"
    group: "{{ usuario }}"
    mode: 0777
  tags:
    - install
    - upgrade
  when:
    - certs == "selfsigned"

- name: OS_CONF Copy custom SSL certs
  copy:
    src: "../../../instances/{{ tenant_folder }}/key.pem"
    dest: /etc/omnileads/certs/key.pem
    owner: "{{ usuario }}"
    group: "{{ usuario }}"
    mode: 0777
  tags:
    - install
    - upgrade
  when:
    - certs == "custom"

- name: OS_CONF Copy oml_manage script
  template:
    src: "templates/oml_manage.sh"
    dest: /usr/local/bin/oml_manage.sh
    mode: 0755
  tags:
    - install
    - upgrade

- name: OS_CONF Set timezone of server
  timezone: name={{ TZ }}
  tags:
    - install
    - upgrade

- name: OS_CONF Copy Prometheus Node Exporter service
  template:
    src: "templates/prometheus_node_exporter.service"
    dest: /etc/systemd/system/
    mode: 0600
  tags:
    - install
    - upgrade

- name: OS_CONF Copy Prometheus Node Exporter env
  template:
    src: "templates/prometheus_node_exporter.env"
    dest: /etc/default/
    mode: 0600
  tags:
    - install
    - upgrade

- name: OS_CONF Enable and start systemd Prometheus Node Exporter service
  systemd:
    name: prometheus_node_exporter
    state: restarted
    enabled: yes
    daemon_reload: yes
  tags:
    - install
    - upgrade
