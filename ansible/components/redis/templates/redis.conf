bind {{ redis_host }}

protected-mode yes
port 6379

{% if scale_redis is defined and scale_redis and redis_tcp_backlog is defined %}
tcp-backlog {{ redis_tcp_backlog }}
{% else %}
tcp-backlog 511
{% endif %}

timeout 0
tcp-keepalive 300

daemonize no
pidfile /var/run/redis_6379.pid
loglevel notice
logfile ""
databases 16
always-show-logo no
set-proc-title yes
proc-title-template "{title} {listen-addr} {server-mode}"

################################ SNAPSHOTTING  ################################

stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
rdb-del-sync-files no
dir ./

################################# REPLICATION #################################

replica-serve-stale-data yes
replica-read-only yes
repl-diskless-sync no
repl-diskless-sync-delay 5
repl-diskless-load disabled
repl-disable-tcp-nodelay no
replica-priority 100

############################### KEYS TRACKING #################################

################################## SECURITY ###################################

acllog-max-len 128
# aclfile /etc/redis/users.acl
# requirepass foobared
# allchannels: grants access to all Pub/Sub channels
# resetchannels: revokes access to all Pub/Sub channels
#
# To ensure backward compatibility while upgrading Redis 6.0, acl-pubsub-default
# defaults to the 'allchannels' permission.
#
# Future compatibility note: it is very likely that in a future version of Redis
# the directive's default of 'allchannels' will be changed to 'resetchannels' in
# order to provide better out-of-the-box Pub/Sub security. Therefore, it is
# recommended that you explicitly define Pub/Sub permissions for all users
# rather then rely on implicit default values. Once you've set explicit
# Pub/Sub for all existing users, you should uncomment the following line.
#
# acl-pubsub-default resetchannels

################################### CLIENTS ####################################

{% if scale_redis is defined and scale_redis and redis_maxclients is defined %}
maxclients {{ redis_maxclients }}
{% else %}
# maxclients 10000
{% endif %}


############################## MEMORY MANAGEMENT ################################

{% if scale_redis is defined and scale_redis and redis_maxmemory is defined %}
maxmemory {{ redis_maxmemory }}
{% else %}
#maxmemory 5gb
{% endif %}

{% if scale_redis is defined and scale_redis and redis_maxmemory_policy is defined %}
maxmemory-policy {{ redis_maxmemory_policy }}
{% else %}
# maxmemory-policy noeviction
{% endif %}

# maxmemory-samples 5
# maxmemory-eviction-tenacity 10
# replica-ignore-maxmemory yes
# active-expire-effort 1

############################# LAZY FREEING ####################################


{% if scale_redis is defined and scale_redis and redis_lazyfree_lazy_eviction is defined %}
lazyfree-lazy-eviction {{ 'yes' if redis_lazyfree_lazy_eviction else 'no' }}
{% else %}
lazyfree-lazy-eviction no
{% endif %}

{% if scale_redis is defined and scale_redis and redis_lazyfree_lazy_expire is defined %}
lazyfree-lazy-expire {{ 'yes' if redis_lazyfree_lazy_expire else 'no' }}
{% else %}
lazyfree-lazy-expire no
{% endif %}

lazyfree-lazy-server-del no
replica-lazy-flush no
lazyfree-lazy-user-del no
lazyfree-lazy-user-flush no

################################ THREADED I/O #################################

# io-threads 4
# io-threads-do-reads no

############################ KERNEL OOM CONTROL ##############################

oom-score-adj no
oom-score-adj-values 0 200 800

#################### KERNEL transparent hugepage CONTROL ######################

disable-thp yes

############################## APPEND ONLY MODE ###############################

appendonly no
appendfilename "appendonly.aof"
appendfsync everysec
# appendfsync no
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes
aof-use-rdb-preamble yes

################################ LUA SCRIPTING  ###############################

lua-time-limit 5000

################################ REDIS CLUSTER  ###############################

# cluster-enabled yes
# cluster-config-file nodes-6379.conf
# cluster-node-timeout 15000
# cluster-replica-validity-factor 10
# cluster-migration-barrier 1
# cluster-allow-replica-migration yes
# cluster-require-full-coverage yes
# cluster-replica-no-failover no
# cluster-allow-reads-when-down no

########################## CLUSTER DOCKER/NAT support  ########################
# cluster-announce-ip 10.1.1.5
# cluster-announce-tls-port 6379
# cluster-announce-port 0
# cluster-announce-bus-port 6380

################################## SLOW LOG ###################################

slowlog-log-slower-than 10000
slowlog-max-len 128

################################ LATENCY MONITOR ##############################

latency-monitor-threshold 0

############################# EVENT NOTIFICATION ##############################

notify-keyspace-events ""

############################### GOPHER SERVER #################################

# gopher-enabled no

############################### ADVANCED CONFIG ###############################

hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64
hll-sparse-max-bytes 3000
stream-node-max-bytes 4096
stream-node-max-entries 100
activerehashing yes
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60
hz 10
dynamic-hz yes
aof-rewrite-incremental-fsync yes
rdb-save-incremental-fsync yes

# lfu-log-factor 10
# lfu-decay-time 1

########################### ACTIVE DEFRAGMENTATION #######################

# Enabled active defragmentation
# activedefrag no

# Minimum amount of fragmentation waste to start active defrag
# active-defrag-ignore-bytes 100mb

# Minimum percentage of fragmentation to start active defrag
# active-defrag-threshold-lower 10

# Maximum percentage of fragmentation at which we use maximum effort
# active-defrag-threshold-upper 100

# Minimal effort for defrag in CPU percentage, to be used when the lower
# threshold is reached
# active-defrag-cycle-min 1

# Maximal effort for defrag in CPU percentage, to be used when the upper
# threshold is reached
# active-defrag-cycle-max 25

# Maximum number of set/hash/zset/list fields that will be processed from
# the main dictionary scan
# active-defrag-max-scan-fields 1000

# Jemalloc background thread for purging will be enabled by default
jemalloc-bg-thread yes

# Set redis server/io threads to cpu affinity 0,2,4,6:
# server_cpulist 0-7:2
# Set bio threads to cpu affinity 1,3:
# bio_cpulist 1,3
# Set aof rewrite child process to cpu affinity 8,9,10,11:
# aof_rewrite_cpulist 8-11
# Set bgsave child process to cpu affinity 1,10,11
# bgsave_cpulist 1,10-11

loadmodule /var/opt/redislabs/lib/modules/redisgears.so