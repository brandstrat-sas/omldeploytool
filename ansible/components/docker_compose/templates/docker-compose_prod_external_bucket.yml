version: '3.3'
services:
  app:
    container_name: oml-django-server
    depends_on:
      - redis
      - acd
      - postgresql
    dns: 8.8.8.8
    environment:
      - CRON_ENABLE=false
      - TZ=${TZ}
      - DJANGO_HOSTNAME=${DJANGO_HOSTNAME}
      - UWSGI_PORT=8099
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - PGHOST=${PGHOST}
      - PGDATABASE=${PGDATABASE}
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOSTHA=${PGHOSTHA}
      - PGHOSTRO=${PGHOSTRO}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - WEBSOCKET_HOST=${WEBSOCKET_HOSTNAME}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT}
      - CALIFICACION_REAGENDA=${CALIFICACION_REAGENDA}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - EPHEMERAL_USER_TTL=${EPHEMERAL_USER_TTL}
      - INSTALL_PREFIX=${INSTALL_PREFIX}
      - LOGIN_FAILURE_LIMIT=${LOGIN_FAILURE_LIMIT}
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
      - PYTHONPATH=${PYTHONPATH}
      - SESSION_COOKIE_AGE=${SESSION_COOKIE_AGE}
      - CALLREC_DEVICE=${CALLREC_DEVICE}
      - MONITORFORMAT=mp3
      - S3_STORAGE_ENABLED=true
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - AWS_DEFAULT_REGION=us-east-1
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - GOOGLE_MAPS_CENTER='${GOOGLE_MAPS_CENTER}'
      - EMAIL_BACKEND=django.core.mail.backends.dummy.EmailBackend
      - OML_BRANCH=${OML_BRANCH}
      - OML_COMMIT=${OML_COMMIT}
      - OML_BUILD_DATE=${OML_BUILD_DATE}
      - WOMBAT_HOSTNAME=${WOMBAT_HOSTNAME}
      - WOMBAT_USER=${WOMBAT_USER}
      - WOMBAT_PASSWORD=${WOMBAT_PASSWORD}
      - OML_LOGGING_SLOWSQL_ENABLED=
      - OML_LOGGING_SLOWSQL_OUTPUT="-"
      - OML_LOGGING_SLOWSQL_DURATION=1
      #- SURVEY_VERSION=develop
      #- WALLBOARD_VERSION=develop
      #- PREMIUM_REPORTS_VERSION=develop
    image: ${OMLAPP_IMG}
    network_mode: host
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true
    working_dir: /opt/omnileads/ominicontacto
    volumes:
      - django_static:/opt/omnileads/static
      - django_callrec_zip:/opt/omnileads/asterisk/var/spool/asterisk/monitor
    logging:
      driver: loki
      options:
        loki-url: "http://{{ loki_host }}:3100/loki/api/v1/push"
        loki-external-labels: "env=production,component=uwsgi"
        
  channels:
    depends_on:
      - redis
    container_name: oml-daphne-server
    dns: 8.8.8.8
    environment:
      - DAPHNE_ENABLE=True
      - TZ=${TZ}
      - DJANGO_HOSTNAME=${DJANGO_HOSTNAME}
      - DAPHNE_PORT=8098
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - PGHOST=${PGHOST}
      - PGDATABASE=${PGDATABASE}
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOSTHA=${PGHOSTHA}
      - PGHOSTRO=${PGHOSTRO}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - WEBSOCKET_HOST=${WEBSOCKET_HOSTNAME}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT}
      - CALIFICACION_REAGENDA=${CALIFICACION_REAGENDA}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - EPHEMERAL_USER_TTL=${EPHEMERAL_USER_TTL}
      - INSTALL_PREFIX=${INSTALL_PREFIX}
      - LOGIN_FAILURE_LIMIT=${LOGIN_FAILURE_LIMIT}
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
      - PYTHONPATH=${PYTHONPATH}
      - SESSION_COOKIE_AGE=${SESSION_COOKIE_AGE}
      - CALLREC_DEVICE=${CALLREC_DEVICE}
      - MONITORFORMAT=mp3
      - S3_STORAGE_ENABLED=true
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - AWS_DEFAULT_REGION=us-east-1
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - GOOGLE_MAPS_CENTER='${GOOGLE_MAPS_CENTER}'
      - EMAIL_BACKEND=django.core.mail.backends.dummy.EmailBackend
      - OML_BRANCH=${OML_BRANCH}
      - OML_COMMIT=${OML_COMMIT}
      - OML_BUILD_DATE=${OML_BUILD_DATE}
      - WOMBAT_HOSTNAME=localhost
      - WOMBAT_USER=${WOMBAT_USER}
      - WOMBAT_PASSWORD=${WOMBAT_PASSWORD}
      - OML_LOGGING_SLOWSQL_ENABLED=
      - OML_LOGGING_SLOWSQL_OUTPUT="-"
      - OML_LOGGING_SLOWSQL_DURATION=1
    image: ${OMLAPP_IMG}
    network_mode: host
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true
    working_dir: /opt/omnileads/ominicontacto
    logging:
      driver: loki
      options:
        loki-url: "http://{{ loki_host }}:3100/loki/api/v1/push"
        loki-external-labels: "env=production,component=daphne"

  crones:
    depends_on:
      - redis
      - acd
      - postgresql
    container_name: oml-cron-server
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}
      - DJANGO_HOSTNAME=${DJANGO_HOSTNAME}
      - UWSGI_PORT=8097
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - PGHOST=${PGHOST}
      - PGDATABASE=${PGDATABASE}
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOSTHA=${PGHOSTHA}
      - PGHOSTRO=${PGHOSTRO}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - WEBSOCKET_HOST=${WEBSOCKET_HOSTNAME}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT}
      - CALIFICACION_REAGENDA=${CALIFICACION_REAGENDA}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - EPHEMERAL_USER_TTL=${EPHEMERAL_USER_TTL}
      - INSTALL_PREFIX=${INSTALL_PREFIX}
      - LOGIN_FAILURE_LIMIT=${LOGIN_FAILURE_LIMIT}
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
      - PYTHONPATH=${PYTHONPATH}
      - SESSION_COOKIE_AGE=${SESSION_COOKIE_AGE}
      - CALLREC_DEVICE=${CALLREC_DEVICE}
      - MONITORFORMAT=mp3
      - S3_STORAGE_ENABLED=true
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - AWS_DEFAULT_REGION=us-east-1
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - GOOGLE_MAPS_CENTER='${GOOGLE_MAPS_CENTER}'
      - EMAIL_BACKEND=django.core.mail.backends.dummy.EmailBackend
      - OML_BRANCH=${OML_BRANCH}
      - OML_COMMIT=${OML_COMMIT}
      - OML_BUILD_DATE=${OML_BUILD_DATE}
      - WOMBAT_HOSTNAME=localhost
      - WOMBAT_USER=${WOMBAT_USER}
      - WOMBAT_PASSWORD=${WOMBAT_PASSWORD}
      - OML_LOGGING_SLOWSQL_ENABLED=
      - OML_LOGGING_SLOWSQL_OUTPUT="-"
      - OML_LOGGING_SLOWSQL_DURATION=1
    image: ${OMLAPP_IMG}
    network_mode: host
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true
    working_dir: /opt/omnileads
    logging:
      driver: loki
      options:
        loki-url: "http://{{ loki_host }}:3100/loki/api/v1/push"
        loki-external-labels: "env=production,component=cron"

  acd:
    container_name: oml-asterisk-server
    depends_on:
      - redis
      - websockets
      - postgresql
    dns: 8.8.8.8
    environment:
      - ENV=${ENV}
      - TZ=${TZ}
      - ASTERISK_LOCATION=
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - PGHOST=${PGHOST}
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGDATABASE=${PGDATABASE}
      - PGPASSWORD=${PGPASSWORD}
      - PGSSL=${PGSSL}
      - CALLREC_DEVICE=${CALLREC_DEVICE}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - HOMERHOST=${HOMERHOST}
      - HOMERPORT=${HOMERPORT}
      - HOMER_ENABLE=False
    image: ${OMLACD_IMG}
    network_mode: host
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - /etc/asterisk/custom/:/etc/asterisk/custom
      - asterisk_data:/var/spool/asterisk/monitor
    working_dir: /etc/asterisk
    logging:
      driver: loki
      options:
        loki-url: "http://{{ loki_host }}:3100/loki/api/v1/push"
        loki-external-labels: "env=production,component=asterisk"

  kamailio:
    command:
      - /bin/bash
    container_name: oml-kamailio-server
    depends_on:
      - redis
      - acd
      - rtpengine 
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - AUTHEPH_SK=${AUTHEPH_SK}
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - RTPENGINE_HOSTNAME=${RTPENGINE_HOSTNAME}
      - SHM_SIZE=${SHM_SIZE}
      - PKG_SIZE=${PKG_SIZE}
      - KAMAILIO_CERTS_LOCATION=${KAMAILIO_CERTS_LOCATION}
    image: ${OMLKAM_IMG}
    network_mode: host
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - /etc/omnileads/certs/:/${KAMAILIO_CERTS_LOCATION}
    logging:
      driver: loki
      options:
        loki-url: "http://{{ loki_host }}:3100/loki/api/v1/push"
        loki-external-labels: "env=production,component=kamailio"

  nginx:
    container_name: oml-nginx-server
    depends_on:
      - app
      - kamailio
      - websockets
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ENV=prodenv
      - DJANGO_HOSTNAME=${DJANGO_HOSTNAME}
      - DAPHNE_HOSTNAME=${DAPHNE_HOSTNAME}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - WEBSOCKETS_HOSTNAME=${WEBSOCKET_HOSTNAME}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - CALLREC_DEVICE=${CALLREC_DEVICE}
    image: ${OMLNGINX_IMG}
    network_mode: host
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - django_static:/opt/omnileads/static
      - django_callrec_zip:/opt/omnileads/asterisk/var/spool/asterisk/monitor
      - /etc/omnileads/certs/:/etc/omnileads/certs
    logging:
      driver: loki
      options:
        loki-url: "http://{{ loki_host }}:3100/loki/api/v1/push"
        loki-external-labels: "env=production,component=nginx"

  redis:
    container_name: oml-redis-server
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - BIND_IP=${REDIS_HOSTNAME}
    network_mode: host
    image: ${OMLREDIS_IMG}
    command: redis-server --bind ${REDIS_HOSTNAME}
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - redis_data:/data
    logging:
      driver: loki
      options:
        loki-url: "http://{{ loki_host }}:3100/loki/api/v1/push"
        loki-external-labels: "env=production,component=redis"

  postgresql:
    container_name: oml-postgres-server
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    image: ${OMLPGSQL_IMG}
    command: postgres -c listen_addresses=${PGHOST}
    network_mode: host
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    logging:
      driver: loki
      options:
        loki-url: "http://{{ loki_host }}:3100/loki/api/v1/push"
        loki-external-labels: "env=production,component=postgres"

  rtpengine:
    container_name: oml-rtpengine-server
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ENV=${ENV}
      - RTPENGINE_HOSTNAME=${RTPENGINE_HOSTNAME}
    image: ${OMLRTPENGINE_IMG}
    network_mode: host
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    logging:
      driver: loki
      options:
        loki-url: "http://{{ loki_host }}:3100/loki/api/v1/push"
        loki-external-labels: "env=production,component=rtpengine"

  websockets:
    tty: true
    container_name: oml-websockets-server
    image: ${OMLWS_IMG}
    depends_on:
      - redis
    environment:
      - BIND_ADDRESS=${WEBSOCKET_HOSTNAME}:8000
      - EVENT_LOOP=uvloop
      - LOGGERS=${WEBSOCKET_LOGGER}
      - REDIS_HOST=${WEBSOCKET_REDIS_HOSTNAME}
      - PYTHONUNBUFFERED=1
    network_mode: host
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health-checks"]
      interval: 1s
      timeout: 10s
      retries: 10
    logging:
      driver: loki
      options:
        loki-url: "http://{{ loki_host }}:3100/loki/api/v1/push"
        loki-external-labels: "env=production,component=websockets"


####################################### OBSERVABILITY #######################################

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.listen-address=${PUBLIC_IP}:9090'
    restart: unless-stopped
    network_mode: host
    labels:
      org.label-schema.group: "monitoring"
    logging:
      options:
        max-size: "50m"
    volumes:
      - /etc/omnileads/prometheus.yml/:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  nodeexporter:
    image: prom/node-exporter:latest
    container_name: obs-nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--web.listen-address=localhost:9100'
    restart: unless-stopped
    network_mode: host
    labels:
      org.label-schema.group: "monitoring"
    logging:
      options:
        max-size: "50m"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: obs-cadvisor
    restart: unless-stopped
    network_mode: host
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro

  redis-exporter:
    depends_on: 
      - redis
    image: oliver006/redis_exporter
    container_name: obs-redis-exp
    network_mode: host
    restart: unless-stopped
    environment:
      - REDIS_ADDR=localhost:6379
      - REDIS_USER=null
      - REDIS_PASSWORD=null

volumes:
  redis_data:
  django_static:
  django_callrec_zip:
  mariadb_data:
  prometheus_data:
  asterisk_data: 
  postgres_data: 
