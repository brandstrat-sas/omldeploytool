# Copyright (C) 2023 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

- name: OMniLeads Backup Playbook
  hosts: 
    - omnileads_data
    - omnileads_app
    - omnileads_voice
    - omnileads_aio
  tags:
    - backup
  vars:
    img_repo: '{{ container_image_registry }}/omnileads/omlapp'
  tasks:

    - name: BACKUP generate file_timestamp
      set_fact:
        file_timestamp: "{{ ansible_date_time.epoch }}"

    - name: BACKUP postgres DB selfhosted bucket cluster
      shell: "podman run -e POSTGRES_BACKUP=True -e S3_ENDPOINT=http://{{ data_host }}:9000 -e S3_BUCKET_NAME={{ bucket_name }} -e BACKUP_FILENAME=pgsql-backup-{{ file_timestamp }}.sql -e AWS_ACCESS_KEY_ID={{ bucket_access_key }}  -e AWS_SECRET_ACCESS_KEY={{ bucket_secret_key }} -e PGUSER={{ postgres_user }} -e PGPASSWORD={{ postgres_password }} -e PGDATABASE={{ postgres_database }} -e PGHOST={{ data_host }} -e PGPORT={{ postgres_port }} {{ img_repo }}:{{ omnileads_version }}"
      when:
        - inventory_hostname in groups['omnileads_app']
        - container_orchest == "systemd"
        - bucket_url is not defined
        
    - name: BACKUP postgres DB selfhosted bucket AIO
      shell: "podman run --network=host -e POSTGRES_BACKUP=True -e S3_ENDPOINT=http://localhost:9000 -e S3_BUCKET_NAME={{ bucket_name }} -e BACKUP_FILENAME=pgsql-backup-{{ file_timestamp }}.sql -e AWS_ACCESS_KEY_ID={{ bucket_access_key }}  -e AWS_SECRET_ACCESS_KEY={{ bucket_secret_key }} -e PGUSER={{ postgres_user }} -e PGPASSWORD={{ postgres_password }} -e PGDATABASE={{ postgres_database }} -e PGHOST=localhost -e PGPORT={{ postgres_port }} {{ img_repo }}:{{ omnileads_version }}"
      when:
        - inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"
        - bucket_url is not defined

    - name: BACKUP postgres DB external bucket cluster
      shell: "podman run -e POSTGRES_BACKUP=True -e S3_ENDPOINT={{ bucket_url }} -e S3_BUCKET_NAME={{ bucket_name }} -e BACKUP_FILENAME=pgsql-backup-{{ file_timestamp }}.sql -e AWS_ACCESS_KEY_ID={{ bucket_access_key }}  -e AWS_SECRET_ACCESS_KEY={{ bucket_secret_key }} -e PGUSER={{ postgres_user }} -e PGPASSWORD={{ postgres_password }} -e PGDATABASE={{ postgres_database }} -e PGHOST={{ data_host }} -e PGPORT={{ postgres_port }} {{ img_repo }}:{{ omnileads_version }}"
      when:
        - inventory_hostname in groups['omnileads_app']
        - container_orchest == "systemd"
        - bucket_url is defined
        - bucket_ssl_selfsigned is not defined

    - name: BACKUP postgres DB external bucket AIO
      shell: "podman run --network=host -e POSTGRES_BACKUP=True -e S3_ENDPOINT={{ bucket_url }} -e S3_BUCKET_NAME={{ bucket_name }} -e BACKUP_FILENAME=pgsql-backup-{{ file_timestamp }}.sql -e AWS_ACCESS_KEY_ID={{ bucket_access_key }}  -e AWS_SECRET_ACCESS_KEY={{ bucket_secret_key }} -e PGUSER={{ postgres_user }} -e PGPASSWORD={{ postgres_password }} -e PGDATABASE={{ postgres_database }} -e PGHOST=localhost -e PGPORT={{ postgres_port }} {{ img_repo }}:{{ omnileads_version }}"
      when:
        - inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"
        - bucket_url is defined
        - bucket_ssl_selfsigned is not defined

    - name: BACKUP postgres DB external bucket ssl selfsigned cluster
      shell: "podman run -e SSL_SELFSIGNED=true -e POSTGRES_BACKUP=True -e S3_ENDPOINT={{ bucket_url }} -e S3_BUCKET_NAME={{ bucket_name }} -e BACKUP_FILENAME=pgsql-backup-{{ file_timestamp }}.sql -e AWS_ACCESS_KEY_ID={{ bucket_access_key }}  -e AWS_SECRET_ACCESS_KEY={{ bucket_secret_key }} -e PGUSER={{ postgres_user }} -e PGPASSWORD={{ postgres_password }} -e PGDATABASE={{ postgres_database }} -e PGHOST={{ data_host }} -e PGPORT={{ postgres_port }} {{ img_repo }}:{{ omnileads_version }}"
      when:
        - inventory_hostname in groups['omnileads_app']
        - container_orchest == "systemd"
        - bucket_url is defined
        - bucket_ssl_selfsigned is defined

    - name: BACKUP postgres DB external bucket ssl selfsigned AIO
      shell: "podman run --network=host -e SSL_SELFSIGNED=true -e POSTGRES_BACKUP=True -e S3_ENDPOINT={{ bucket_url }} -e S3_BUCKET_NAME={{ bucket_name }} -e BACKUP_FILENAME=pgsql-backup-{{ file_timestamp }}.sql -e AWS_ACCESS_KEY_ID={{ bucket_access_key }}  -e AWS_SECRET_ACCESS_KEY={{ bucket_secret_key }} -e PGUSER={{ postgres_user }} -e PGPASSWORD={{ postgres_password }} -e PGDATABASE={{ postgres_database }} -e PGHOST=localhost -e PGPORT={{ postgres_port }} {{ img_repo }}:{{ omnileads_version }}"
      when:
        - inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"
        - bucket_url is defined
        - bucket_ssl_selfsigned is defined    
    
    - name: BACKUP upload asterisk backup to selfhosted BUCKET cluster
      shell: "podman exec -it oml-asterisk-server /opt/asterisk/scripts/asterisk_backup.py {{ file_timestamp }}"
      when:        
        - inventory_hostname in groups['omnileads_voice'] or inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"
