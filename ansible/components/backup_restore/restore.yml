# Copyright (C) 2023 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

- name: OMniLeads RESTORE Playbook
  hosts: 
    - omnileads_data
    - omnileads_voice
    - omnileads_app
    - omnileads_aio
  tags:
    - restore
  vars:
    img_repo: '{{ container_image_registry }}/omnileads/omlapp'
  tasks:

    - name: RESTORE postgres Stop postgresql systemd service 
      service:
        name: postgresql
        state: stopped
      when:
        - inventory_hostname in groups['omnileads_data'] or inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"

    - name: RESTORE postgres Stop postgresql docker
      shell: docker stop oml-postgres-server
      when:
        - inventory_hostname in groups['omnileads_aio']
        - container_orchest == "docker_compose"

    - name: RESTORE postgres drop database podman
      shell: "podman volume rm oml_postgres"
      when:
        - inventory_hostname in groups['omnileads_data'] or inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"
      ignore_errors: yes  

    - name: RESTORE postgres drop database docker
      shell: "docker volume rm {{ tenant_id }}_oml_postgres"
      when:
        - inventory_hostname in groups['omnileads_aio']
        - container_orchest == "docker_compose"
      ignore_errors: yes  

    - name: RESTORE postgres Start postgresql systemd service
      service:
        name: postgresql
        state: started
      when:
        - inventory_hostname in groups['omnileads_data'] or inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"

    - name: RESTORE postgres Start postgresql docker
      shell: docker-compose -f /etc/omnileads/docker-compose.yml up -d
      when:
        - inventory_hostname in groups['omnileads_aio']
        - container_orchest == "docker_compose"

    - name: RESTORE asterisk mv /etc/asterisk/custom to bk folder previus restore
      command: "creates={{ asterisk_location_conf }}/custom_{{ restore_file_timestamp }} mv {{ asterisk_location_conf }}/custom/ {{ asterisk_location_conf }}/custom_{{ restore_file_timestamp }}"
      when:
        - inventory_hostname in groups['omnileads_voice'] or inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"

    - name: RESTORE asterisk from selfhosted BUCKET cluster
      shell: "podman exec -it oml-asterisk-server aws --endpoint-url http://{{ data_host }}:9000 s3 sync s3://{{ bucket_name }}/backup/asterisk/{{ restore_file_timestamp }} {{ asterisk_location_conf }}/custom/ --delete"
      when:       
        - inventory_hostname in groups['omnileads_voice']
        - container_orchest == "systemd"
        - bucket_url is not defined

    - name: RESTORE asterisk from selfhosted BUCKET cluster
      shell: "podman exec -it oml-asterisk-server aws --endpoint-url http://localhost:9000 s3 sync s3://{{ bucket_name }}/backup/asterisk/{{ restore_file_timestamp }} {{ asterisk_location_conf }}/custom/ --delete"
      when:       
        - inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"
        - bucket_url is not defined

    - name: RESTORE asterisk from insecure SSL external BUCKET
      shell: "podman exec -it oml-asterisk-server aws --endpoint-url {{ bucket_url }} --no-verify-ssl s3 sync s3://{{ bucket_name }}/backup/asterisk/{{ restore_file_timestamp }} {{ asterisk_location_conf }}/custom/ --delete"
      when:       
        - inventory_hostname in groups['omnileads_voice'] or inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"
        - bucket_url is defined
        - bucket_ssl_selfsigned is defined

    - name: RESTORE asterisk from external BUCKET
      shell: "podman exec -it oml-asterisk-server aws --endpoint-url {{ bucket_url }} s3 sync s3://{{ bucket_name }}/backup/asterisk/{{ restore_file_timestamp }} {{ asterisk_location_conf }}/custom/ --delete"
      when:       
        - inventory_hostname in groups['omnileads_voice'] or inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"
        - bucket_url is defined
        - bucket_ssl_selfsigned is not defined

    - name: RESTORE asterisk  Change file ownership /etc/asterisk/custom
      file:
        path: '{{ asterisk_location_conf }}/custom'
        owner: omnileads
        group: omnileads
        mode: '0744'
        recurse: true
        state: directory
      when:
        - inventory_hostname in groups['omnileads_voice'] or inventory_hostname in groups['omnileads_aio']

    - name: RESTORE asterisk reload config
      shell: "podman exec -it oml-asterisk-server asterisk -rx 'dialplan reload'"
      when:
        - inventory_hostname in groups['omnileads_voice'] or inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"

    - name: RESTORE postgres DB selfhosted bucket cluster
      shell: "podman run -e POSTGRES_RESTORE=True -e S3_ENDPOINT=http://{{ data_host }}:9000 -e S3_BUCKET_NAME={{ bucket_name }} -e BACKUP_FILENAME=pgsql-backup-{{ restore_file_timestamp }}.sql -e AWS_ACCESS_KEY_ID={{ bucket_access_key }}  -e AWS_SECRET_ACCESS_KEY={{ bucket_secret_key }} -e PGUSER={{ postgres_user }} -e PGPASSWORD={{ postgres_password }} -e PGDATABASE={{ postgres_database }} -e PGHOST={{ data_host }} -e PGPORT={{ postgres_port }} {{ img_repo }}:{{ omnileads_version }}"
      when:
        - inventory_hostname in groups['omnileads_app']
        - container_orchest == "systemd"
        - bucket_url is not defined
        
    - name: RESTORE postgres DB selfhosted bucket AIO
      shell: "podman run --network=host -e POSTGRES_RESTORE=True -e S3_ENDPOINT=http://localhost:9000 -e S3_BUCKET_NAME={{ bucket_name }} -e BACKUP_FILENAME=pgsql-backup-{{ restore_file_timestamp }}.sql -e AWS_ACCESS_KEY_ID={{ bucket_access_key }}  -e AWS_SECRET_ACCESS_KEY={{ bucket_secret_key }} -e PGUSER={{ postgres_user }} -e PGPASSWORD={{ postgres_password }} -e PGDATABASE={{ postgres_database }} -e PGHOST=localhost -e PGPORT={{ postgres_port }} {{ img_repo }}:{{ omnileads_version }}"
      when:
        - inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"
        - bucket_url is not defined

    - name: RESTORE postgres DB external bucket cluster
      shell: "podman run -e POSTGRES_RESTORE=True -e S3_ENDPOINT={{ bucket_url }} -e S3_BUCKET_NAME={{ bucket_name }} -e BACKUP_FILENAME=pgsql-backup-{{ restore_file_timestamp }}.sql -e AWS_ACCESS_KEY_ID={{ bucket_access_key }}  -e AWS_SECRET_ACCESS_KEY={{ bucket_secret_key }} -e PGUSER={{ postgres_user }} -e PGPASSWORD={{ postgres_password }} -e PGDATABASE={{ postgres_database }} -e PGHOST={{ data_host }} -e PGPORT={{ postgres_port }} {{ img_repo }}:{{ omnileads_version }}"
      when:
        - inventory_hostname in groups['omnileads_app']
        - container_orchest == "systemd"
        - bucket_url is defined
        - bucket_ssl_selfsigned is not defined

    - name: RESTORE postgres DB external bucket AIO
      shell: "podman run --network=host -e POSTGRES_RESTORE=True -e S3_ENDPOINT={{ bucket_url }} -e S3_BUCKET_NAME={{ bucket_name }} -e BACKUP_FILENAME=pgsql-backup-{{ restore_file_timestamp }}.sql -e AWS_ACCESS_KEY_ID={{ bucket_access_key }}  -e AWS_SECRET_ACCESS_KEY={{ bucket_secret_key }} -e PGUSER={{ postgres_user }} -e PGPASSWORD={{ postgres_password }} -e PGDATABASE={{ postgres_database }} -e PGHOST=localhost -e PGPORT={{ postgres_port }} {{ img_repo }}:{{ omnileads_version }}"
      when:
        - inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"
        - bucket_url is defined
        - bucket_ssl_selfsigned is not defined

    - name: RESTORE postgres DB external bucket ssl selfsigned cluster
      shell: "podman run -e SSL_SELFSIGNED=true -e POSTGRES_RESTORE=True -e S3_ENDPOINT={{ bucket_url }} -e S3_BUCKET_NAME={{ bucket_name }} -e BACKUP_FILENAME=pgsql-backup-{{ restore_file_timestamp }}.sql -e AWS_ACCESS_KEY_ID={{ bucket_access_key }}  -e AWS_SECRET_ACCESS_KEY={{ bucket_secret_key }} -e PGUSER={{ postgres_user }} -e PGPASSWORD={{ postgres_password }} -e PGDATABASE={{ postgres_database }} -e PGHOST={{ data_host }} -e PGPORT={{ postgres_port }} {{ img_repo }}:{{ omnileads_version }}"
      when:
        - inventory_hostname in groups['omnileads_app']
        - container_orchest == "systemd"
        - bucket_url is defined
        - bucket_ssl_selfsigned is defined

    - name: RESTORE postgres DB external bucket ssl selfsigned AIO
      shell: "podman run --network=host -e SSL_SELFSIGNED=true -e POSTGRES_RESTORE=True -e S3_ENDPOINT={{ bucket_url }} -e S3_BUCKET_NAME={{ bucket_name }} -e BACKUP_FILENAME=pgsql-backup-{{ restore_file_timestamp }}.sql -e AWS_ACCESS_KEY_ID={{ bucket_access_key }}  -e AWS_SECRET_ACCESS_KEY={{ bucket_secret_key }} -e PGUSER={{ postgres_user }} -e PGPASSWORD={{ postgres_password }} -e PGDATABASE={{ postgres_database }} -e PGHOST=localhost -e PGPORT={{ postgres_port }} {{ img_repo }}:{{ omnileads_version }}"
      when:
        - inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"
        - bucket_url is defined
        - bucket_ssl_selfsigned is defined

    - name: RESTORE django media_root from selfhosted BUCKET cluster
      shell: "podman exec -it oml-django-server aws --endpoint http://{{ data_host }}:9000 s3 sync s3://{{ bucket_name }}/media_root {{ INSTALL_PREFIX }}/media_root/"
      when:
        - inventory_hostname in groups['omnileads_app']
        - container_orchest == "systemd"
        - bucket_url is not defined
        - bucket_ssl_selfsigned is not defined

    - name: RESTORE django media_root from selfhosted BUCKET AIO
      shell: "podman exec -it oml-django-server aws --endpoint http://localhost:9000 s3 sync s3://{{ bucket_name }}/media_root {{ INSTALL_PREFIX }}/media_root/"
      when:
        - inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"
        - bucket_url is not defined
        - bucket_ssl_selfsigned is not defined
    
    - name: RESTORE django media_root from external BUCKET 
      shell: "podman exec -it oml-django-server aws --endpoint {{ bucket_url }} s3 sync s3://{{ bucket_name }}/media_root {{ INSTALL_PREFIX }}/media_root/"
      when:
        - inventory_hostname in groups['omnileads_app'] or inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"
        - bucket_url is defined
        - bucket_ssl_selfsigned is not defined

    - name: RESTORE django media_root from SSL selfsigned BUCKET
      shell: "podman exec -it oml-django-server aws --endpoint {{ bucket_url }} --no-verify-ssl s3 sync s3://{{ bucket_name }}/media_root {{ INSTALL_PREFIX }}/media_root/"
      when:
        - inventory_hostname in groups['omnileads_app'] or inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"
        - bucket_url is defined
        - bucket_ssl_selfsigned is defined

    - name: RESTORE DJANGO Restart systemd service
      systemd:
        name: omnileads.service
        state: restarted
        enabled: yes
        daemon_reload: yes
      when:
        - inventory_hostname in groups['omnileads_app'] or inventory_hostname in groups['omnileads_aio']
        - container_orchest == "systemd"