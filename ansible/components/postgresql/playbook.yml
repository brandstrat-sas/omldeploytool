# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can nginxtribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

- name: POSTGRESQL component delpoy
  hosts: omnileads-app
  tags:
    - backing
    - pgsql
    - aio

  vars:
    img_repo: '{{ container_image_registry }}/freetechsolutions/omlpgsql'
    img_prometheus_repo: 'docker.io/prometheuscommunity/postgres-exporter'

  tasks:

    - name: POSTGRESQL Create of .pgpass files
      template:
        src: "{{ pgsql_repo_path }}templates/.pgpass"
        dest: '{{ item.dest }}/.pgpass'
        mode: 0600
        owner: root
        group: root
      when: item.when is not defined
      with_items:
        - { dest: /root }
        - { dest: /opt/omnileads, when: postgres_out }
      tags:
        - upgrade

    - name: POSTGRESQL Set environment variables for this installation
      template:
        src: "{{ pgsql_repo_path }}templates/postgres.env"
        dest: /etc/default/postgres.env
        mode: 664
        owner: "{{ usuario }}"
        group: "{{ usuario }}"
      tags:
        - upgrade

    - name: POSTGRESQL Copy systemd file
      template:
        src: "{{ pgsql_repo_path }}templates/postgresql.service"
        dest: /etc/systemd/system/postgresql.service
      tags:
        - upgrade

    - name: POSTGRESQL Pull image
      command: podman pull --quiet {{ img_repo }}:{{ postgres_version }}
      register: podman_pull
      until: podman_pull is success
      tags:
        - upgrade

    - name: POSTGRESQL Enable and start service
      systemd:
        name: postgresql.service
        state: restarted
        enabled: yes
        daemon_reload: yes
      tags:
        - upgrade

    - name: POSTGRESQL prometheus Set environment variables for this installation
      template:
        src: "{{ pgsql_repo_path }}templates/prometheus.env"
        dest: /etc/default/prometheus_postgres.env
        mode: 664
        owner: "{{ usuario }}"
        group: "{{ usuario }}"
      tags:
        - upgrade

    - name: POSTGRESQL prometheus Copy systemd file
      template:
        src: "{{ pgsql_repo_path }}templates/prometheus.service"
        dest: /etc/systemd/system/prometheus_postgres.service
      tags:
        - upgrade

    - name: POSTGRESQL prometheus Pull image
      command: podman pull --quiet {{ img_prometheus_repo }}
      register: podman_pull
      until: podman_pull is success
      tags:
        - upgrade

    - name: POSTGRESQL prometheus Enable and start service
      systemd:
        name: prometheus_postgres.service
        state: restarted
        enabled: yes
        daemon_reload: yes
      tags:
        - upgrade
