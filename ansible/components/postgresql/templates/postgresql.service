[Unit]
Description=Podman container-oml-postgresql-server.service
Documentation=man:podman-generate-systemd(1)
Wants=network-online.target
After=network-online.target
RequiresMountsFor=%t/containers

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=on-failure
TimeoutStopSec=70
ExecStartPre=/bin/rm -f %t/%n.ctr-id

# Ensure proper Jinja2 condition handling
ExecStart=/usr/bin/podman run \
  --cidfile=%t/%n.ctr-id \
  --cgroups=no-conmon \
  --sdnotify=conmon \
  --replace \
  --detach \
  --rm \
  --network=host \
  --log-driver=journald \
  --env-file=/etc/default/postgres.env \
  --name=oml-postgresql-server \
  --volume=oml_postgres:/var/lib/postgresql/data \
{% if omnileads_ha is defined %}
  --volume=/etc/omnileads/repmgr.conf:/etc/postgresql/repmgr.conf \
  --volume=/etc/omnileads/postgresql.conf:/etc/postgresql/postgresql.conf \
  --volume=/etc/omnileads/pg_hba.conf:/etc/postgresql/pg_hba.conf \
  --volume=/etc/omnileads/pgpass:/var/lib/postgresql/.pgpass \
  {{ postgres_ha_img }} postgres -c config_file=/etc/postgresql/postgresql.conf -c hba_file=/etc/postgresql/pg_hba.conf
{% else %}
  {{ postgres_img }} postgres -c listen_addresses={{ postgres_host }}
{% endif %}

ExecStop=/usr/bin/podman stop --ignore --cidfile=%t/%n.ctr-id
ExecStopPost=/usr/bin/podman rm -f --ignore --cidfile=%t/%n.ctr-id
Type=notify
NotifyAccess=all
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=default.target
