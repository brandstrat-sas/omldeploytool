# Copyright (C) 2022 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: You can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see http://www.gnu.org/licenses/.

---

- name: DJANGO OMniLeads application installation
  hosts: omnileads-app
  tags:
    - all_components
    - app
    - django
  vars:
    img_repo: '{{ container_image_registry }}/omnileads/omlapp'
    INSTALL_PREFIX: "/opt/omnileads"

  tasks:

  - name: DJANGO environment variables for this installation
    template:
      src: "{{ django_repo_path }}templates/django.env"
      dest: /etc/default/django.env
      mode: 666
      owner: "{{ usuario }}"
      group: "{{ usuario }}"
    tags:
      - install
      - upgrade

  - name: DJANGO Change file ownership, group and permissions
    file:
      path:  /etc/default/django.env
      owner: "{{ usuario }}"
      group: "{{ usuario }}"
      mode: '0666'
    tags:
      - install
      - upgrade

  - name: DJANGO Channels Daphne environment variables
    template:
      src: "{{ django_repo_path }}templates/daphne.env"
      dest: /etc/default/daphne.env
      mode: 666
      owner: "{{ usuario }}"
      group: "{{ usuario }}"
    tags:
      - install
      - upgrade

  - name: DJANGO Crones environment variables
    template:
      src: "{{ django_repo_path }}templates/cron.env"
      dest: /etc/default/cron.env
      mode: 666
      owner: "{{ usuario }}"
      group: "{{ usuario }}"
    tags:
      - install
      - upgrade

  - name: DJANGO Create a new database with name {{ postgres_database }}
    postgresql_db:
      name: "{{ postgres_database }}"
      login_host: "{{ postgres_host }}"
      login_password: "{{ postgres_password }}"
      login_user: "{{ postgres_user }}"
      port: "{{ postgres_port }}"
      maintenance_db: "{{ postgres_maintenance_db }}"
      state: present
    tags:
      - install

  - name: DJANGO Adds plperl extension to the database {{ postgres_database }}
    postgresql_ext:
      name: plperl
      db: "{{ postgres_database }}"
      login_host: "{{ postgres_host }}"
      login_password: "{{ postgres_password }}"
      login_user: "{{ postgres_user }}"
      port: "{{ postgres_port }}"
    tags:
      - install

  - name: DJANGO Create of .pgpass files
    template:
      src: "{{ pgsql_repo_path }}templates/.pgpass"
      dest: '{{ item.dest }}/.pgpass'
      mode: 0600
      owner: root
      group: root
    when: item.when is not defined
    with_items:
      - { dest: /root }
      - { dest: /opt/omnileads, when: postgres_out }
    tags:
      - install
      - upgrade

  - name: DJANGO Copy systemd service
    template:
      src: "{{ django_repo_path }}templates/django.service"
      dest: /etc/systemd/system/omnileads.service
    tags:
      - install
      - upgrade

  - name: DJANGO Copy Daphne systemd service
    template:
      src: "{{ django_repo_path }}templates/daphne.service"
      dest: /etc/systemd/system/daphne.service
    tags:
      - install
      - upgrade

  - name: DJANGO Copy CRONES systemd service
    template:
      src: "{{ django_repo_path }}templates/cron.service"
      dest: /etc/systemd/system/cron.service
    tags:
      - install
      - upgrade

  - name: DJANGO Pull image
    command: podman pull --quiet {{ img_repo }}:{{ omnileads_version }}
    register: podman_pull
    until: podman_pull is success
    tags:
      - install
      - upgrade

  - name: DJANGO Enable and start systemd service
    systemd:
      name: omnileads.service
      state: restarted
      enabled: yes
      daemon_reload: yes
    tags:
      - install
      - upgrade

  - name: DJANGO Channels Enable and start Daphne systemd service
    systemd:
      name: daphne.service
      state: restarted
      enabled: yes
      daemon_reload: yes
    tags:
      - install
      - upgrade

  - name: DJANGO Crones Enable and start Daphne systemd service
    systemd:
      name: cron.service
      state: restarted
      enabled: yes
      daemon_reload: yes
    tags:
      - install
      - upgrade
