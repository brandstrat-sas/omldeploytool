stages:
  - deploy

deploy-aio-digitalocean:
  stage: deploy
  image: omnileads/doctl:230427.01
  variables: 
    DIGITALOCEAN_ACCESS_TOKEN: $DIGITALOCEAN_ACCESS_TOKEN
    DIGITALOCEAN_DROPLET_IMG: $DIGITALOCEAN_DROPLET_IMG
    DIGITALOCEAN_DROPLET_SIZE: $DIGITALOCEAN_DROPLET_SIZE
    DIGITALOCEAN_REGION: $DIGITALOCEAN_REGION
    DIGITALOCEAN_SSH_KEY: $DIGITALOCEAN_SSH_KEY
    CI_JOB_ID: $CI_JOB_ID
  script:
    - doctl auth init -t ${DIGITALOCEAN_ACCESS_TOKEN}
    - git clone --branch $CI_COMMIT_BRANCH https://gitlab.com/omnileads/omldeploytool.git ~/omldeploytool    
    - doctl compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} --user-data-file ~/omldeploytool/docker-compose/user-data.sh cicd-aio.${CI_JOB_ID}
    - sleep 60
    - OML_IPADDR=$(doctl compute droplet list |grep cicd-aio.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests"
    - until curl -sk --head --request GET https://$OML_IPADDR |grep "302" > /dev/null; do echo "Environment still being installed, sleeping 60 seconds"; sleep 60; done; echo "Environment is up"
    - sleep 60
    - doctl compute droplet delete -f cicd-aio.${CI_JOB_ID}
    - rm -rf omldeploytool
  only:
    - /.*pipeline-aio.*$/
    - /.*pipeline-all.*$/
    - schedules
    - web

deploy-systemd-digitalocean:
  stage: deploy
  script:
    - $DOCTL compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE_SYSTEMD} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} cicd-data.${CI_JOB_ID}
    - $DOCTL compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE_SYSTEMD} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} cicd-voice.${CI_JOB_ID}
    - $DOCTL compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE_SYSTEMD} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} cicd-app.${CI_JOB_ID}
    - sleep 120
    - OML_IPADDR_DATA=$($DOCTL compute droplet list |grep cicd-app.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests" 
    - OML_IPADDR_VOICE=$($DOCTL compute droplet list |grep cicd-app.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests" 
    - OML_IPADDR_APP=$($DOCTL compute droplet list |grep cicd-app.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests" 
    - rm -rf ~/omldeploytool
    - git clone --branch $CI_COMMIT_BRANCH https://gitlab.com/omnileads/omldeploytool.git ~/omldeploytool
    - cd omldeploytool/systemd 
    - mkdir instances/gitlab
    - cp inventory.yml instances/gitlab
    - sed -i "s/X.X.X.DATA/$OML_IPADDR_DATA/g" ./instances/gitlab/inventory.yml
    - sed -i "s/X.X.X.DATAPRIV/$OML_IPADDR_DATAPRIV/g" ./instances/gitlab/inventory.yml
    - sed -i "s/X.X.X._VOICE/$OML_IPADDR_VOICE/g" ./instances/gitlab/inventory.yml
    - sed -i "s/X.X.X._VOICEPRIV/$OML_IPADDR_VOICEPRIV/g" ./instances/gitlab/inventory.yml
    - sed -i "s/X.X.X._APP/$OML_IPADDR_APP/g" ./instances/gitlab/inventory.yml
    - sed -i "s/X.X.X._APPPRIV/$OML_IPADDR_APPPRIV/g" ./instances/gitlab/inventory.yml
    - bash -x deploy.sh --action=install --tenant=gitlab
    - until curl -sk --head --request GET https://$OML_IPADDR_APP |grep "302" > /dev/null; do echo "Environment still being installed, sleeping 60 seconds"; sleep 60; done; echo "Environment is up"
    - sleep 60
    - $DOCTL compute droplet delete -f cicd-app.${CI_JOB_ID}
    - $DOCTL compute droplet delete -f cicd-data.${CI_JOB_ID}
    - $DOCTL compute droplet delete -f cicd-voice.${CI_JOB_ID}
  only:
    - /.*pipeline-systemd.*$/
    - /.*pipeline-all.*$/
    - schedules
    - web
