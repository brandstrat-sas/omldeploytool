stages:
  - deploy
  - tests

# deploy-backing-cloud-digitalocean:
#   stage: deploy
#   environment: DOCTL_DIGITALOCEAN_AIO
#   script:
#     - rm -rf omldeploy-backing-cloud
#     - git clone --branch $CI_COMMIT_BRANCH https://gitlab.com/omnileads/omldeploy.git omldeploy-backing-cloud
#     - sed -i "s/#export oml_action=/export oml_action=install/g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - sed -i "s/#export oml_infra=/export oml_infra=digitalocean/g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - sed -i "s/#export oml_component=/export oml_component=aio/g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - sed -i "s/#export oml_repo_branch=/export oml_repo_branch=$CI_COMMIT_BRANCH/g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - sed -i "s/#export oml_env=/export oml_env=cloud/g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - doctl databases create cicd-$CI_JOB_ID --engine pg --version 13 --region $DIGITALOCEAN_REGION
#     - sleep 300
#     - ID=$(doctl databases list |grep cicd-$CI_JOB_ID | awk '{print $1}')
#     - PGHOST=$(doctl databases connection $ID | awk '{print $3}' |grep -v Host)
#     - PGPORT=$(doctl databases connection $ID | awk '{print $4}' |grep -v Port)
#     - PGPASS=$(doctl databases connection $ID | awk '{print $6}' |grep -v Password)
#     - doctl databases db create $ID omnileads
#     - sed -i "s/#export oml_pgsql_user=/export oml_pgsql_user=doadmin/g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - sed -i "s/#export oml_pgsql_password=/export oml_pgsql_password=$PGPASS/g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - sed -i "s%\#export oml_pgsql_host=%export oml_pgsql_host=$PGHOST%g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - sed -i "s/#export oml_pgsql_port=/export oml_pgsql_port=$PGPORT/g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - sed -i "s/#export oml_pgsql_cloud=/export oml_pgsql_cloud=true/g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - sed -i "s/#export oml_pgsql_ssl=/export oml_pgsql_ssl=true/g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - sed -i "s/#export bucket_name=/export bucket_name=omnileads/g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - sed -i "s%\#export bucket_access_key=%export bucket_access_key=$DIGITAL_OCEAN_BUCKET_KEY%g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - sed -i "s%\#export bucket_secret_key=%export bucket_secret_key=$DIGITAL_OCEAN_BUCKET_SECRET%g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - sed -i "s%\#export bucket_url=%export bucket_url=https://sfo3.digitaloceanspaces.com%g" ./omldeploy-backing-cloud/ansible/user-data.sh
#     - doctl compute droplet create --image $DIGITALOCEAN_DROPLET_IMG --size $DIGITALOCEAN_DROPLET_SIZE --region $DIGITALOCEAN_REGION --ssh-keys $DIGITALOCEAN_SSH_KEY --user-data-file ./omldeploy-backing-cloud/ansible/user-data.sh cicd-backing-cloud.$CI_JOB_ID
#     - sleep 60
#     - IP=$(doctl compute droplet list |grep cicd-backing-cloud.$CI_JOB_ID |awk '{print $3}') && echo "$IP 2 run tests"
#     - until curl -sk --head  --request GET https://$IP |grep "302" > /dev/null; do echo "Environment still being installed, sleeping 80 seconds"; sleep 90; done; echo "Environment is up"
#     - sleep 60
#     - doctl compute droplet delete -f cicd-backing-cloud.$CI_JOB_ID
#     - doctl databases delete -f $ID
#   tags:
#     - deploy-aio
#   only:
#     - /.*pipeline-backing.*$/
#     - /.*pipeline-all.*$/
#     - schedules
#     - web


deploy-aio-digitalocean:
  stage: deploy
  environment: DOCTL_DIGITALOCEAN_AIO
  script:
    - rm -rf omldeploytool
    - git clone --branch $CI_COMMIT_BRANCH https://gitlab.com/omnileads/omldeploytool.git
    - cd ./omldeploytool
    - git checkout develop
    - doctl compute droplet create --image $DIGITALOCEAN_DROPLET_IMG --size $DIGITALOCEAN_DROPLET_SIZE --region $DIGITALOCEAN_REGION --ssh-keys $DIGITALOCEAN_SSH_KEY --user-data-file ./omldeploytool/docker-compose/user-data.sh cicd-aio.$CI_JOB_ID
    - sleep 60
    - IP=$(doctl compute droplet list |grep cicd-aio.$CI_JOB_ID |awk '{print $3}') && echo "$IP 2 run tests"
    - until curl -sk --head  --request GET https://$IP |grep "302" > /dev/null; do echo "Environment still being installed, sleeping 80 seconds"; sleep 80; done; echo "Environment is up"
    - sleep 360
    - doctl compute droplet delete -f cicd-aio.$CI_JOB_ID
    - rm -rf omldeploytool
  tags:
    - deploy-aio
  only:
    - /.*pipeline-aio.*$/
    - /.*pipeline-all.*$/
    - schedules
    - web
