stages:
  - deploy

deploy-docker-compose-cloud:
  stage: deploy
  environment: CLOUD_DOCKER_AIO
  image: omnileads/doctl:230427.01
  variables: 
    DIGITALOCEAN_ACCESS_TOKEN: $DIGITALOCEAN_ACCESS_TOKEN
    DIGITALOCEAN_DROPLET_IMG: $DIGITALOCEAN_DROPLET_IMG
    DIGITALOCEAN_DROPLET_SIZE: $DIGITALOCEAN_DROPLET_SIZE
    DIGITALOCEAN_REGION: $DIGITALOCEAN_REGION
    DIGITALOCEAN_SSH_KEY: $DIGITALOCEAN_SSH_KEY
    NIC: eth1
    ENV: cloud
    CI_JOB_ID: $CI_JOB_ID
    BRANCH: $CI_COMMIT_REF_NAME
  script:
    - doctl auth init -t ${DIGITALOCEAN_ACCESS_TOKEN}
    - git clone -b $CI_COMMIT_REF_NAME https://gitlab.com/omnileads/omldeploytool.git
    - doctl compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} --user-data-file ./omldeploytool/docker-compose/first_boot_installer.sh cicd-docker-compose.${CI_JOB_ID}
    - sleep 60
    - OML_IPADDR=$(doctl compute droplet list |grep cicd-docker-compose.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests"
    - until curl -sk --head --request GET https://$OML_IPADDR |grep "302" > /dev/null; do echo "Environment still being installed, sleeping 60 seconds"; sleep 60; done; echo "Environment is up"
    - sleep 120
    - doctl compute droplet delete -f cicd-docker-compose.${CI_JOB_ID}
    - rm -rf ./omldeploytool
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
    - if: '$CI_PIPELINE_SOURCE == "web"'

deploy-aio-cloud:
  stage: deploy
  environment: SYSTEMD_AIO  
  script:
    - doctl auth init -t ${DIGITALOCEAN_ACCESS_TOKEN}
    - doctl compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} cicd-systemd.${CI_JOB_ID}
    - sleep 60
    - OML_IPADDR=$(doctl compute droplet list |grep cicd-systemd.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests"
    - OML_IPADDR_APPLAN=$(doctl compute droplet list |grep cicd-systemd.${CI_JOB_ID} |awk '{print $4}') && echo "$OML_IPADDR_APPLAN to run tests" 
    - rm -rf ~/omldeploytool
    - git clone -b $CI_COMMIT_REF_NAME https://gitlab.com/omnileads/omldeploytool.git ~/omldeploytool
    - mkdir -p ~/omldeploytool/ansible/instances/gitlab
    - cd ~/omldeploytool/ansible
    - cp inventory.yml instances/gitlab/inventory.yml
    - sed -i "s/190.19.150.18/$OML_IPADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "s/172.16.101.44/$OML_IPADDR_APPLAN/g" ./instances/gitlab/inventory.yml
    - sed -i "320 s/tenant_example_5_data/#tenant_example_5_data/g" ./instances/gitlab/inventory.yml
    - sed -i "324 s/tenant_example_5_voice/#tenant_example_5_voice/g" ./instances/gitlab/inventory.yml
    - sed -i "328 s/tenant_example_5_app/#tenant_example_5_app/g" ./instances/gitlab/inventory.yml
    - bash -x deploy.sh --action=install --tenant=gitlab
    - until curl -sk --head --request GET https://$OML_IPADDR|grep "302" > /dev/null; do echo "Environment still being installed, sleeping 60 seconds"; sleep 60; done; echo "Environment is up"
    - sleep 90
    - doctl compute droplet delete -f cicd-systemd.${CI_JOB_ID}
  tags:
    - deploy
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
    - if: '$CI_PIPELINE_SOURCE == "web"'

deploy-ait-cloud:
  stage: deploy
  environment: SYSTEMD_CLUSTER
  script:
    - doctl compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE_SYSTEMD} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} cicd-data.${CI_JOB_ID}
    - doctl compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE_SYSTEMD} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} cicd-voice.${CI_JOB_ID}
    - doctl compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE_SYSTEMD} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} cicd-app.${CI_JOB_ID}
    - sleep 60
    - OML_IPADDR_DATA=$(doctl compute droplet list |grep cicd-data.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests" 
    - OML_IPADDR_DATALAN=$(doctl compute droplet list |grep cicd-data.${CI_JOB_ID} |awk '{print $4}') && echo "$OML_IPADDR to run tests" 
    - OML_IPADDR_VOICE=$(doctl compute droplet list |grep cicd-voice.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests" 
    - OML_IPADDR_VOICELAN=$(doctl compute droplet list |grep cicd-voice.${CI_JOB_ID} |awk '{print $4}') && echo "$OML_IPADDR to run tests" 
    - OML_IPADDR_APP=$(doctl compute droplet list |grep cicd-app.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests" 
    - OML_IPADDR_APPLAN=$(doctl compute droplet list |grep cicd-app.${CI_JOB_ID} |awk '{print $4}') && echo "$OML_IPADDR to run tests" 
    - rm -rf ~/omldeploytool
    - git clone -b $CI_COMMIT_REF_NAME https://gitlab.com/omnileads/omldeploytool.git ~/omldeploytool
    - mkdir -p ~/omldeploytool/ansible/instances/gitlab
    - cd ~/omldeploytool/ansible 
    - cp inventory.yml instances/gitlab/inventory.yml
    - sed -i "s/179.34.22.11/$OML_IPADDR_DATA/g" ./instances/gitlab/inventory.yml
    - sed -i "s/192.168.0.2/$OML_IPADDR_DATALAN/g" ./instances/gitlab/inventory.yml
    - sed -i "s/179.134.12.18/$OML_IPADDR_VOICE/g" ./instances/gitlab/inventory.yml
    - sed -i "s/192.168.0.3/$OML_IPADDR_VOICELAN/g" ./instances/gitlab/inventory.yml
    - sed -i "s/190.134.62.33/$OML_IPADDR_APP/g" ./instances/gitlab/inventory.yml
    - sed -i "s/192.168.0.4/$OML_IPADDR_APPLAN/g" ./instances/gitlab/inventory.yml
    - sed -i "310 s/tenant_example_1/#tenant_example_1/g" ./instances/gitlab/inventory.yml
    - sed -i "320 s/tenant_example_5_data/tenant_example_6_data/g" ./instances/gitlab/inventory.yml
    - sed -i "324 s/tenant_example_5_voice/tenant_example_6_voice/g" ./instances/gitlab/inventory.yml
    - sed -i "328 s/tenant_example_5_app/tenant_example_6_app/g" ./instances/gitlab/inventory.yml
    - bash -x deploy.sh --action=install --tenant=gitlab
    - until curl -sk --head --request GET https://$OML_IPADDR_APP |grep "302" > /dev/null; do echo "Environment still being installed, sleeping 60 seconds"; sleep 60; done; echo "Environment is up"
    - sleep 120
    - doctl compute droplet delete -f cicd-app.${CI_JOB_ID}
    - doctl compute droplet delete -f cicd-data.${CI_JOB_ID}
    - doctl compute droplet delete -f cicd-voice.${CI_JOB_ID}
  tags:
    - deploy
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
