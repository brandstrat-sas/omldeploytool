stages:
  - deploy

deploy-docker-compose-cloud:
  stage: deploy
  environment: CLOUD_DOCKER_AIO
  image: omnileads/doctl:230427.01
  variables: 
    DIGITALOCEAN_ACCESS_TOKEN: $DIGITALOCEAN_ACCESS_TOKEN
    DIGITALOCEAN_DROPLET_IMG: $DIGITALOCEAN_DROPLET_IMG
    DIGITALOCEAN_DROPLET_SIZE: $DIGITALOCEAN_DROPLET_SIZE
    DIGITALOCEAN_REGION: $DIGITALOCEAN_REGION
    DIGITALOCEAN_SSH_KEY: $DIGITALOCEAN_SSH_KEY
    NIC: eth1
    ENV: cloud
    CI_JOB_ID: $CI_JOB_ID
  script:
    - doctl auth init -t ${DIGITALOCEAN_ACCESS_TOKEN}
    - git clone --branch $CI_COMMIT_BRANCH https://gitlab.com/omnileads/omldeploytool.git
    - doctl compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} --user-data-file ./omldeploytool/docker-compose/user-data.sh cicd-docker-compose.${CI_JOB_ID}
    - sleep 60
    - OML_IPADDR=$(doctl compute droplet list |grep cicd-docker-compose.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests"
    - until curl -sk --head --request GET https://$OML_IPADDR |grep "302" > /dev/null; do echo "Environment still being installed, sleeping 60 seconds"; sleep 60; done; echo "Environment is up"
    - sleep 120
    - doctl compute droplet delete -f cicd-docker-compose.${CI_JOB_ID}
    - rm -rf ./omldeploytool
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
    - if: '$CI_COMMIT_REF_NAME =~ /deploy/'
    - if: '$CI_PIPELINE_SOURCE == "web"'

deploy-systemd-ansible:
  stage: deploy
  environment: SYSTEMD_AIO
  script:
    - doctl auth init -t ${DIGITALOCEAN_ACCESS_TOKEN}
    - doctl compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} cicd-systemd.${CI_JOB_ID}
    - sleep 60
    - OML_IPADDR=$(doctl compute droplet list |grep cicd-systemd.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests"
    - OML_IPADDR_APPLAN=$(doctl compute droplet list |grep cicd-systemd.${CI_JOB_ID} |awk '{print $4}') && echo "$OML_IPADDR_APPLAN to run tests" 
    - rm -rf ~/omldeploytool
    - git clone --branch $CI_COMMIT_BRANCH https://gitlab.com/omnileads/omldeploytool.git ~/omldeploytool
    - mkdir -p ~/omldeploytool/ansible/instances/gitlab
    - cd ~/omldeploytool/ansible
    - cp inventory.yml instances/gitlab/inventory.yml
    - sed -i "s/190.19.150.18/$OML_IPADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "s/172.16.101.44/$OML_IPADDR_APPLAN/g" ./instances/gitlab/inventory.yml
    - sed -i "224 s/tenant_example_5_data/#tenant_example_5_data/g" ./instances/gitlab/inventory.yml
    - sed -i "230 s/tenant_example_5_voice/#tenant_example_5_voice/g" ./instances/gitlab/inventory.yml
    - sed -i "236 s/tenant_example_5_app/#tenant_example_5_app/g" ./instances/gitlab/inventory.yml
    - bash -x deploy.sh --action=install --tenant=gitlab
    - until curl -sk --head --request GET https://$OML_IPADDR|grep "302" > /dev/null; do echo "Environment still being installed, sleeping 60 seconds"; sleep 60; done; echo "Environment is up"
    - sleep 120
    - doctl compute droplet delete -f cicd-systemd.${CI_JOB_ID}
  tags:
    - deploy
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
    - if: '$CI_COMMIT_REF_NAME =~ /deploy/'
    - if: '$CI_PIPELINE_SOURCE == "web"'

deploy-docker-compose-ansible:
  stage: deploy
  environment: DOCKER_COMPOSE
  script:
    - doctl auth init -t ${DIGITALOCEAN_ACCESS_TOKEN}
    - doctl compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} cicd-systemd.${CI_JOB_ID}
    - sleep 60
    - OML_IPADDR=$(doctl compute droplet list |grep cicd-systemd.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests"
    - OML_IPADDR_APPLAN=$(doctl compute droplet list |grep cicd-systemd.${CI_JOB_ID} |awk '{print $4}') && echo "$OML_IPADDR_APPLAN to run tests" 
    - rm -rf ~/omldeploytool
    - git clone --branch $CI_COMMIT_BRANCH https://gitlab.com/omnileads/omldeploytool.git ~/omldeploytool
    - mkdir -p ~/omldeploytool/ansible/instances/gitlab
    - cd ~/omldeploytool/ansible
    - cp inventory.yml instances/gitlab/inventory.yml
    - sed -i "s/190.19.150.19/$OML_IPADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "s/172.16.101.45/$OML_IPADDR_APPLAN/g" ./instances/gitlab/inventory.yml
    - sed -i "224 s/tenant_example_5_data/#tenant_example_5_data/g" ./instances/gitlab/inventory.yml
    - sed -i "230 s/tenant_example_5_voice/#tenant_example_5_voice/g" ./instances/gitlab/inventory.yml
    - sed -i "236 s/tenant_example_5_app/#tenant_example_5_app/g" ./instances/gitlab/inventory.yml
    - sed -i "218 s/tenant_example_1/#tenant_example_1/g" ./instances/gitlab/inventory.yml
    - sed -i "221 s/#tenant_example_4/tenant_example_4/g" ./instances/gitlab/inventory.yml
    - bash -x deploy.sh --action=install --tenant=gitlab
    - until curl -sk --head --request GET https://$OML_IPADDR|grep "302" > /dev/null; do echo "Environment still being installed, sleeping 60 seconds"; sleep 60; done; echo "Environment is up"
    - sleep 120
    - doctl compute droplet delete -f cicd-systemd.${CI_JOB_ID}
  tags:
    - deploy
rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
    - if: '$CI_COMMIT_REF_NAME =~ /deploy/'
    - if: '$CI_PIPELINE_SOURCE == "web"'

deploy-docker-compose-ansible:
  stage: deploy
  environment: DOCKER_COMPOSE
  script:
  - doctl auth init -t ${DIGITALOCEAN_ACCESS_TOKEN}
    - doctl compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} cicd-ansible-compose.${CI_JOB_ID}
    - sleep 60
    - OML_IPADDR=$(doctl compute droplet list |grep cicd-ansible-compose.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests"
    - OML_IPADDR_APPLAN=$(doctl compute droplet list |grep cicd-ansible-compose.${CI_JOB_ID} |awk '{print $4}') && echo "$OML_IPADDR_APPLAN to run tests" 
    - rm -rf ~/omldeploytool
    - git clone --branch $CI_COMMIT_BRANCH https://gitlab.com/omnileads/omldeploytool.git ~/omldeploytool
    - mkdir -p ~/omldeploytool/ansible/instances/gitlab
    - cd ~/omldeploytool/ansible
    - cp inventory.yml instances/gitlab/inventory.yml
    - sed -i "s/190.19.150.19/$OML_IPADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "s/172.16.101.45/$OML_IPADDR_APPLAN/g" ./instances/gitlab/inventory.yml
    - sed -i "224 s/tenant_example_5_data/#tenant_example_5_data/g" ./instances/gitlab/inventory.yml
    - sed -i "230 s/tenant_example_5_voice/#tenant_example_5_voice/g" ./instances/gitlab/inventory.yml
    - sed -i "236 s/tenant_example_5_app/#tenant_example_5_app/g" ./instances/gitlab/inventory.yml
    - sed -i "218 s/tenant_example_1/#tenant_example_1/g" ./instances/gitlab/inventory.yml
    - sed -i "221 s/#tenant_example_4/tenant_example_4/g" ./instances/gitlab/inventory.yml
    - bash -x deploy.sh --action=install --tenant=gitlab
    - until curl -sk --head --request GET https://$OML_IPADDR|grep "302" > /dev/null; do echo "Environment still being installed, sleeping 60 seconds"; sleep 60; done; echo "Environment is up"
    - sleep 120
    - doctl compute droplet delete -f cicd-ansible-compose.${CI_JOB_ID}
  tags:
    - deploy
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
    - if: '$CI_COMMIT_REF_NAME =~ /deploy/'
    - if: '$CI_PIPELINE_SOURCE == "web"'

deploy-systemd-cluster:
  stage: deploy
  environment: SYSTEMD_CLUSTER
  script:
    - rm -rf ~/omldeploytool
    - git clone --branch $CI_COMMIT_BRANCH https://gitlab.com/omnileads/omldeploytool.git ~/omldeploytool
    - mkdir -p ~/omldeploytool/ansible/instances/gitlab
    - cd ~/omldeploytool/ansible
    - cp inventory.yml instances/gitlab/inventory.yml
    - sed -i "64 s/172.16.101.41/$PROXMOX_ADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "65 s/172.16.101.41/$PROXMOX_ADDR_VM_DATA_MAIN/g" ./instances/gitlab/inventory.yml
    - sed -i "66 s/22/5701/g" ./instances/gitlab/inventory.yml
    - sed -i "68 s/172.16.101.42/$PROXMOX_ADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "69 s/172.16.101.42/$PROXMOX_ADDR_VM_VOICE/g" ./instances/gitlab/inventory.yml
    - sed -i "70 s/22/5702/g" ./instances/gitlab/inventory.yml
    - sed -i "72 s/172.16.101.43/$PROXMOX_ADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "73 s/172.16.101.43/$PROXMOX_ADDR_VM_APP/g" ./instances/gitlab/inventory.yml
    - sed -i "74 s/22/5703/g" ./instances/gitlab/inventory.yml
    - sed -i "218 s/tenant_example_1/#tenant_example_1/g" ./instances/gitlab/inventory.yml            
    - bash -x deploy.sh --action=install --tenant=gitlab
    - until curl -sk --head --request GET https://$PROXMOX_ADDR:5704|grep "302" > /dev/null; do echo "Environment still being installed, sleeping 60 seconds"; sleep 60; done; echo "Environment is up"
  tags:
    - deploy
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
    - if: '$CI_COMMIT_REF_NAME =~ /deploy/'
    - if: '$CI_PIPELINE_SOURCE == "web"'

deploy-systemd-ha:
  stage: deploy
  environment: PROXMOX_HA_SYSTEMD
  script:
    - rm -rf ~/omldeploytool
    - git clone --branch $CI_COMMIT_BRANCH https://gitlab.com/omnileads/omldeploytool.git ~/omldeploytool
    - mkdir -p ~/omldeploytool/ansible/instances/gitlab
    - cd ~/omldeploytool/ansible
    - cp inventory_ha.yml instances/gitlab/inventory.yml
    - sed -i "30 s/172.16.101.101/$PROXMOX_ADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "32 s/22/5107/g" ./instances/gitlab/inventory.yml  
    - sed -i "35 s/172.16.101.102/$PROXMOX_ADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "37 s/22/5108/g" ./instances/gitlab/inventory.yml
    - sed -i "40 s/172.16.101.103/$PROXMOX_ADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "42 s/22/5109/g" ./instances/gitlab/inventory.yml
    - sed -i "44 s/172.16.101.104/$PROXMOX_ADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "46 s/22/5110/g" ./instances/gitlab/inventory.yml
    - sed -i "48 s/172.16.101.105/$PROXMOX_ADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "50 s/22/5111/g" ./instances/gitlab/inventory.yml
    - sed -i "52 s/172.16.101.106/$PROXMOX_ADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "54 s/22/5112/g" ./instances/gitlab/inventory.yml
    - sed -i "56 s/172.16.101.107/$PROXMOX_ADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "58 s/22/5113/g" ./instances/gitlab/inventory.yml
    - sed -i "60 s/172.16.101.108/$PROXMOX_ADDR/g" ./instances/gitlab/inventory.yml
    - sed -i "62 s/22/5114/g" ./instances/gitlab/inventory.yml                    
    - bash -x deploy.sh --action=install --tenant=gitlab
    #- until curl -sk --head --request GET https://$PROXMOX_ADDR:5115|grep "302" > /dev/null; do echo "Environment still being installed, sleeping 60 seconds"; sleep 60; done; echo "Environment is up"
  tags:
    - deploy
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
    - if: '$CI_COMMIT_REF_NAME =~ /deploy/'
    - if: '$CI_PIPELINE_SOURCE == "web"'

###################################################################################################################################################################################################################

# deploy-ait-digitalocean:
#   stage: deploy
#   environment: DOCTL_DIGITALOCEAN_SYSTEMD
#   script:
#     - doctl compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE_SYSTEMD} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} cicd-data.${CI_JOB_ID}
#     - doctl compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE_SYSTEMD} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} cicd-voice.${CI_JOB_ID}
#     - doctl compute droplet create --image ${DIGITALOCEAN_DROPLET_IMG} --size ${DIGITALOCEAN_DROPLET_SIZE_SYSTEMD} --region ${DIGITALOCEAN_REGION} --ssh-keys ${DIGITALOCEAN_SSH_KEY} cicd-app.${CI_JOB_ID}
#     - sleep 60
#     - OML_IPADDR_DATA=$(doctl compute droplet list |grep cicd-data.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests" 
#     - OML_IPADDR_DATALAN=$(doctl compute droplet list |grep cicd-data.${CI_JOB_ID} |awk '{print $4}') && echo "$OML_IPADDR to run tests" 
#     - OML_IPADDR_VOICE=$(doctl compute droplet list |grep cicd-voice.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests" 
#     - OML_IPADDR_VOICELAN=$(doctl compute droplet list |grep cicd-voice.${CI_JOB_ID} |awk '{print $4}') && echo "$OML_IPADDR to run tests" 
#     - OML_IPADDR_APP=$(doctl compute droplet list |grep cicd-app.${CI_JOB_ID} |awk '{print $3}') && echo "$OML_IPADDR to run tests" 
#     - OML_IPADDR_APPLAN=$(doctl compute droplet list |grep cicd-app.${CI_JOB_ID} |awk '{print $4}') && echo "$OML_IPADDR to run tests" 
#     - rm -rf ~/omldeploytool
#     - git clone --branch $CI_COMMIT_BRANCH https://gitlab.com/omnileads/omldeploytool.git ~/omldeploytool
#     - mkdir -p ~/omldeploytool/ansible/instances/gitlab
#     - cd ~/omldeploytool/ansible 
#     - cp inventory_ait.yml instances/gitlab/inventory.yml
#     - sed -i "6 s/X.X.X.X/$OML_IPADDR_DATA/g" ./instances/gitlab/inventory.yml
#     - sed -i "7 s/Z.Z.Z.Z/$OML_IPADDR_DATALAN/g" ./instances/gitlab/inventory.yml
#     - sed -i "11 s/X.X.X.X/$OML_IPADDR_VOICE/g" ./instances/gitlab/inventory.yml
#     - sed -i "12 s/Z.Z.Z.Z/$OML_IPADDR_VOICELAN/g" ./instances/gitlab/inventory.yml
#     - sed -i "16 s/X.X.X.X/$OML_IPADDR_APP/g" ./instances/gitlab/inventory.yml
#     - sed -i "17 s/Z.Z.Z.Z/$OML_IPADDR_APPLAN/g" ./instances/gitlab/inventory.yml
#     - sed -i "63 s/s3/s3-no-check-cert/g" ./instances/gitlab/inventory.yml
#     - bash -x deploy.sh --action=install --tenant=gitlab
#     - until curl -sk --head --request GET https://$OML_IPADDR_APP |grep "302" > /dev/null; do echo "Environment still being installed, sleeping 60 seconds"; sleep 60; done; echo "Environment is up"
#     - sleep 120
#     - doctl compute droplet delete -f cicd-app.${CI_JOB_ID}
#     - doctl compute droplet delete -f cicd-data.${CI_JOB_ID}
#     - doctl compute droplet delete -f cicd-voice.${CI_JOB_ID}
#   tags:
#     - deploy
#   only:
#     - /.*pipeline-systemd.*$/
#     - /.*pipeline-all.*$/
#     - schedules
#     - web
#     - merge_request


