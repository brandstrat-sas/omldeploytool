#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------

# ----------------------- OMLREDIS ------------------------------------ #
# ----------------------- OMLREDIS ------------------------------------ #

defaults OMLREDIS
    mode tcp
    timeout connect  4s
    timeout server  30s
    timeout client  30s

frontend omlredis
    bind 0.0.0.0:{{ redis_port }} name redis
    default_backend omlredis

backend omlredis
    option tcp-check
    tcp-check connect
    tcp-check send PING\r\n
    tcp-check expect string +PONG
    tcp-check send info\ replication\r\n
    tcp-check expect string role:master
    tcp-check send QUIT\r\n
    tcp-check expect string +OK
    server redis_node1 {{ hostvars['app_1'].omni_ip_lan }}:6379 maxconn 4096 check inter 3s
    server redis_node2 {{ hostvars['app_2'].omni_ip_lan }}:6379 maxconn 4096 check inter 3s


# ----------------------- OMLAPP ------------------------------------- #
# ----------------------- OMLAPP ------------------------------------- #

defaults OMLAPP
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

frontend omlapp
    mode http
    bind 0.0.0.0:{{ app_port }} ssl crt /etc/haproxy/certs/hap.pem
    redirect  scheme  https  if  !{ ssl_fc }
    default_backend omlapp

backend omlapp
    cookie SRVNAME insert
    timeout connect 30000
    #timeout client 30000
    timeout server 30000
    balance roundrobin
    server  app1 {{ hostvars['app_1'].omni_ip_lan }}:443 cookie SA check ssl verify none
    server  app2 {{ hostvars['app_2'].omni_ip_lan }}:443 cookie SB check ssl verify none
    