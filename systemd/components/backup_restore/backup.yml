# Copyright (C) 2022 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

- name: OMniLeads Backup Playbook
  hosts: 
    - omnileads_data
    - omnileads_voice
  tags:
    - backup

  tasks:

    - name: BACKUP database
      shell: "podman exec -it oml-postgresql-server bash -c 'PGPASSWORD=\"{{ postgres_password }}\" pg_dump --dbname={{ postgres_database }} --host={{ data_host }} --port={{ postgres_port }} --username={{ postgres_user }}' > /tmp/pgsql-backup-{{ file_timestamp }}.sql"
      when: 
        - omldata is defined
        - postgres_out is not true

    - name: BACKUP upload postgres backup to Bucket
      aws_s3:
        bucket: '{{ bucket_name }}'
        object: 'backup/pgsql-backup-{{ file_timestamp }}.sql'
        src: '/tmp/pgsql-backup-{{ file_timestamp }}.sql'
        mode: put
        region: '{{ bucket_region }}'
        aws_access_key: '{{ bucket_access_key }}'
        aws_secret_key: '{{ bucket_secret_key }}'
        s3_url: '{{ bucket_url }}'
        encrypt: no
      when:
        - bucket_url is defined
        - callrec_device != "s3-no-check-cert"
        - omldata is defined
        - postgres_out is not true

    - name: BACKUP upload postgres backup to insecure SSL BUCKET
      shell: "export AWS_ACCESS_KEY_ID={{ bucket_access_key }} &&  export AWS_SECRET_ACCESS_KEY={{ bucket_secret_key }} && aws --endpoint {{ bucket_url }} --no-verify-ssl s3 cp /tmp/pgsql-backup-{{ file_timestamp }}.sql  s3://{{ bucket_name }}/backup/"
      when:
        - bucket_url is defined
        - callrec_device == "s3-no-check-cert"
        - omldata is defined
        - postgres_out is not true

    - name: BACKUP asterisk custom config files
      s3_sync:
        bucket: '{{ bucket_name }}'
        key_prefix: 'backup/asterisk/{{ file_timestamp }}'
        file_root: '/etc/asterisk/custom/'
        region: '{{ bucket_region }}'
        aws_access_key: '{{ bucket_access_key }}'
        aws_secret_key: '{{ bucket_secret_key }}'
        ec2_url: '{{ bucket_url }}'
      when:
        - bucket_url is defined
        - callrec_device != "s3-no-check-cert"
        - omlvoice is defined  

    - name: BACKUP upload asterisk backup to insecure SSL BUCKET
      shell: "export AWS_ACCESS_KEY_ID={{ bucket_access_key }} &&  export AWS_SECRET_ACCESS_KEY={{ bucket_secret_key }} && aws --endpoint {{ bucket_url }} --no-verify-ssl s3 sync {{ asterisk_location_conf }}/custom/ s3://{{ bucket_name }}/backup/asterisk/{{ file_timestamp }}/"
      when:
        - callrec_device == "s3-no-check-cert"
        - omlvoice is defined
