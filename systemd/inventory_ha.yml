---
############################################
omnileads_data:
  hosts:
    sql_1:  
      ansible_host: 172.16.101.101      
      omni_ip_lan: 172.16.101.101
      ansible_ssh_port: 22
      ha_rol: main
    sql_2:  
      ansible_host: 172.16.101.102
      omni_ip_lan: 172.16.101.102
      ansible_ssh_port: 22  
      ha_rol: backup
  vars:
    postgres_host_ha: true
    ha_vip_nic: eth0
    netaddr: 172.16.101.0/16
    netprefix: 24
############################################
omnileads_voice:
  hosts:
    voice_1:  
      ansible_host: 172.16.101.103
      omni_ip_lan: 172.16.101.103
      ansible_ssh_port: 22
      ha_rol: main
    voice_2:
      ansible_host: 172.16.101.104
      omni_ip_lan: 172.16.101.104
      ansible_ssh_port: 22
      ha_rol: backup
  vars:
    omlvoice: true
    ha_vip_nic: ens18    
############################################
omnileads_haproxy:
  hosts:
    haproxy_1:
      ansible_host: 172.16.101.108
      omni_ip_lan: 172.16.101.108
      ansible_ssh_port: 22
      ha_rol: main
    haproxy_2:  
      ansible_host: 172.16.101.109
      omni_ip_lan: 172.16.101.109
      ansible_ssh_port: 22  
      ha_rol: backup
  vars:
    omlhaproxy: true
    ha_vip_nic: ens18
    app_port: 443
############################################
omnileads_app:
  hosts:
    app_1:  
      ansible_host: 172.16.101.105
      ansible_ssh_port: 22
      omni_ip_lan: 172.16.101.105
      ha_rol: main
    app_2:
      ansible_host: 172.16.101.106
      ansible_ssh_port: 22
      omni_ip_lan: 172.16.101.106
      ha_rol: backup
  vars:
    ha_vip_nic: ens18
    omlapp: true
############################################

all: 
  vars:
    # --- ansible user auth connection
    ansible_user: root

    # -- Cluster Redis IP (Haproxy VIP)
    redis_host: 172.16.101.204
    # --  Cluster redis Main node
    redis_ip_main: 172.16.101.104
    # --  Cluster postgres RW IP
    postgres_host: 172.16.101.201
    # --  Cluster postgres RO IP
    postgres_ro_host: 172.16.101.201
    # --  Cluster Voice (Asterisk + RTPengine) IP
    voice_host: 172.16.101.203
    # -- Cluster HTTP Web App (HAProxy VIP)
    application_host: 172.16.101.204
    # -- Cluster public NAT IP
    omni_ip_wan: 190.19.150.8

    kamailio_version: 230204.01
    asterisk_version: 230328.01
    rtpengine_version: 230204.01
    omnileads_version: 1.26.0
    websockets_version: 230204.01
    nginx_version: 230215.01
    postgres_version: 230204.01
    centos_postgresql_version: 11

    # --- Activate the OMniLeads Enterprise Edition - with "AAAA" licensed.
    # --- on the contrary you will deploy OMniLeads OSS Edition with GPLV3 licensed. 
    enterprise_edition: false
    
    # --- Failover and others notifications
    ha_notification_email: 

    # --  Use in case of run RTPEngine out of this deploy
    # rtpengine_host: 172.16.101.203
    # -- Dialer host
    dialer_host: 10.10.10.10
    # -- Bucket URL for Django & Asterisk
    bucket_url: https://172.16.101.3:9000
    # --- version of each image to deploy
    # --- "cloud" instance (access through public IP)
    # --- or "lan" instance (access through private IP)
    # --- in order to set NAT or Publica ADDR for RTP voice packages
    infra_env: lan
    # --- If you have an DNS FQDN resolution, you must to uncomment and set this param
    # --- otherwise leave commented to work invoking through an IP address
    #fqdn: fabis.sefirot.cloud
    # --- time zone
    TZ: America/Argentina/Cordoba
    # --- TLS/SSL Certs configuration (selfsigned, custom or certbot letsencrypt)
    # --- if you have your own certs, put them into instances/tenant folder and
    # --- change this to *custom*
    certs: selfsigned
    # --- if you object storage service use selfsigned TLS/SSL certs, you mus to put
    # --- *callrec_device=s3-no-check-cert* in order to don't verify CA.
    callrec_device: s3-no-check-cert
    # --- REDIS
    redis_port: 6379
    # --- POSTGRESQL
    postgres_out: false
    # --- set postgres_host if you have your own postgres (standalone host or cloud service)
    # --- otherwise leave commented to deploy PostgreSQL on Application Host instance
    postgres_ha: true
    postgres_port: 5432
    postgres_user: omnileads
    postgres_password: 098098ZZZ
    postgres_database: omnileads
    # --- *postgres* or *defaultdb* depend ...
    postgres_maintenance_db: postgres
    postgres_ssl: false
    # --- OBJECT STORAGE
    bucket_access_key: mYLcr7sx5vEbe7PO
    bucket_secret_key: v1Dl34Q29Bv6ruaWS7cUAEvSVfAtvGkR
    bucket_name: proxmox-deb    
    # --- if your bucket doesn't need region, leave this value (us-east-1)
    bucket_region: us-east-1
    # --- Asterisk Manager Interface (AMI) user & password
    ami_user: omnileads
    ami_password: C12H17N2O4P_o98o98
    # --- Wombat Dialer hostname/IP and API user / pass
    dialer_user: demoadmin
    dialer_password: 765765F1d3l10*
    # ---  kamailio shm & pkg memory params
    shm_size: 64
    pkg_size: 8
    # --- is the time in seconds that will last the https session when inactivity
    SCA: 3600
    # --- Ephemeral Credentials TTL (ECTTL) is the time in seconds            #
    # --- that will last the SIP credentials used to authenticate a SIP user  #
    # --- in the telephony system
    ECCTL: 28800
    # --- is the attempts a user has to enter an incorrect password in login
    LOGIN_FAILURE_LIMIT: 10
    google_maps_api_key: AIzaSyCpeSpp5rRZOMgVr54Vktt71U9i_Dm_7eE
    google_maps_center: '{ "lat": -31.416668, "lng": -64.183334 }'
    # --- SMTP server params, if you want to use your own SMTP, put true and
    # --- uncomment all necesary
    email_smtp_relay: false
    #email_backend:
    #email_default_from:
    #email_host:
    #email_password:
    #email_user:
    #email_port:
    #email_ssl_certfile:
    #email_ssl_keyfile:
    #email_use_ssl:
    #email_use_tls:

    # --- Container registry to pull OMLApp image
    omlapp_repo: omnileads

    # --- High Availability flag
    omnileads_ha: true

    # --- Restore id request by restore filename
    #restore_file_timestamp: 1681215859

    # --- Integrations with external hosts
    # --- Request by Homer
    #prometheus_host: 
    # --- Request by Asterisk 
    #homer_host: 
    # --- Request by Web-Video Inbound Calls 
    #video_host: 

    # --- BACKUPs: in case of implementing a separate bucket for backups
    #backup_bucket: 
    # --- Restore: in case of implementing a separate bucket for restore
    #restore_bucket: 