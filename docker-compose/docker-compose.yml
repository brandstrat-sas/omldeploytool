services:

  uwsgi:
    container_name: oml-uwsgi
    depends_on:
      - postgresql
      - redis
      - asterisk
      - minio
    dns: 8.8.8.8
    env_file: .env
    image: ${OMLAPP_IMG}
    command: /opt/omnileads/bin/init_uwsgi.sh
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true
    working_dir: /opt/omnileads/ominicontacto
    volumes:
      - django_static:/opt/omnileads/static
      - django_callrec_zip:/opt/omnileads/asterisk/var/spool/asterisk/monitor

  daphne:
    container_name: oml-daphne
    depends_on:
      - redis    
    dns: 8.8.8.8
    env_file: .env
    environment:
      - DAPHNE_ENABLE=True
      - DJANGO_HOSTNAME=daphne
    image: ${OMLAPP_IMG}
    command: /opt/omnileads/bin/init_daphne.sh
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true
    working_dir: /opt/omnileads/ominicontacto

  omlcron:
    container_name: oml-cron
    depends_on:
      - postgresql
      - asterisk 
      - minio
      - redis
    dns: 8.8.8.8
    env_file: .env
    environment:
      - UWSGI_PORT=8097
      - DJANGO_HOSTNAME=omlcron
    image: ${OMLAPP_IMG}
    command: /opt/omnileads/bin/docker-entrypoint.sh
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true
    working_dir: /opt/omnileads

  fastagi:
    container_name: oml-fastagi
    depends_on:
      - postgresql
      - redis
    image: ${OMLFASTAGI_IMG}
    command: python /app/fastagi.py
    environment:
      - TZ=${TZ}
      - FASTAGI_HOSTNAME=${FASTAGI_HOSTNAME}
      - PGHOST=${PGHOST}
      - PGPORT=${PGPORT}
      - PGDB=${PGDATABASE}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - REDIS_PORT=6379
    networks:
      - omnileads  
  
  ami:
    container_name: oml-ami
    depends_on:
      - asterisk
      - redis
    image: ${OMLAMI_IMG}
    environment:
      - TZ=${TZ}
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
    restart: on-failure  
    networks:
      - omnileads

  # sentiment_analysis:
  #   image: ${OMLSENTIMENT_IMG}
  #   container_name: oml-sentiment_analisys
  #   depends_on:
  #     - postgresql
  #     - minio
  #     - rabbitmq
  #   dns: 8.8.8.8
  #   environment:
  #     - OPENAI_API_KEY=${OPENAI_API_KEY}
  #     - GOOGLE_API_KEY=${GOOGLE_API_KEY}
  #     - GOOGLE_APPLICATION_CREDENTIALS=/tmp/google_credential.json
  #     - RABBITMQ_HOST=${RABBITMQ_HOSTNAME}
  #     - TZ=${TZ}
  #     - PGHOST=${PGHOST}
  #     - PGPORT=${PGPORT}
  #     - PGUSER=${PGUSER}
  #     - PGDATABASE=${PGDATABASE}
  #     - PGPASSWORD=${PGPASSWORD}
  #     - S3_BUCKET_NAME=${S3_BUCKET_NAME}
  #     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  #     - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  #     - S3_ENDPOINT=${S3_ENDPOINT_MINIO}
  #     - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
  #     - LANG=es
  #     - GCP_PROJECT_ID=${GOOGLE_CLOUD_PROJECTID}
  #   networks:
  #     - omnileads
  #   privileged: true
  #   command: python /app/app_${AI_ENGINE}.py
  #   restart: on-failure
  #   stop_grace_period: 1m30s
  #   # volumes:      
  #   #   - ./asterisk_custom/google_credential.json:/tmp/google_credential.json

  interaction_processor:
    container_name: oml-interaction_processor
    depends_on:
      - rabbitmq
      - minio
    image: ${OMLINTERACTION_PROC_IMG}
    command: python /app/app.py
    environment:
      - TZ={{ TZ}
      - RABBITMQ_HOST=${RABBITMQ_HOSTNAME}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT_MINIO}
      - AWS_DEFAULT_REGION=us-east-1
      - CALLREC_DEVICE=s3
    networks:
      - omnileads
    volumes:
      - asterisk_callrec:/var/spool/asterisk/monitor

  asterisk_retrieve_conf:
    container_name: oml-asterisk_retrieve_conf
    image: ${OMLACD_RETRIEVE_CONF_IMG}
    depends_on:      
      - nginx
      - redis
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ARI_HOST=asterisk
      - ARI_USER=omnileadsami
      - ARI_PASS=5_MeO_DMT
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - asterisk_conf:/home/omnileads/astconf
      - asterisk_sounds:/home/omnileads/sounds

  asterisk:
    container_name: oml-asterisk
    depends_on:
      - fastagi      
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ENV=${ENV}
      - SCALE=False      
      - FASTAGI=${FASTAGI_HOSTNAME}      
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}      
      - RABBITMQ_HOST=${RABBITMQ_HOSTNAME}
      - DIALER_HOST=${DIALER_ASTERISK_SIP_HOSTNAME}
      - HOMER_HOST=${HOMER_HOSTNAME}
      - HOMER_PORT=${HOMER_PORT}
      - HOMER_ENABLE=${HOMER_ENABLE}      
    image: ${OMLACD_IMG}
    networks:
      - omnileads
    expose:
        - 40000-40199/udp
    ports:
      - ${SIP_EXT_PORT}:5060/udp
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    working_dir: /etc/asterisk
    volumes:
      - asterisk_callrec:/var/spool/asterisk/monitor
      - asterisk_conf:/etc/asterisk/retrieve_conf
      - asterisk_sounds:/var/lib/asterisk/sounds/oml
      #- ./asterisk_custom/pjsip_wizard_agents.conf:/etc/asterisk/oml_pjsip_wizard.conf:ro

  dialer_asterisk:
    container_name: oml-asterisk_dialer
    image: ${OMLDIALER_ACD_IMG}
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ARI_USER=${AMI_USER}
      - ARI_PASS=${AMI_PASSWORD}
      - ASTERISK_DIALER_HOSTNAME=0.0.0.0
      - OMLACD_HOSTNAME=${DIALER_OMLACD_SIP_HOSTNAME}
      # - PSTNGW_SIP_USER=${DIALER_PSTNGW_SIP_USER}
      # - PSTNGW_SIP_PASS=${DIALER_PSTNGW_SIP_PASS}
      # - PSTNGW_HOSTNAME=${DIALER_PSTNGW_HOSTNAME}
      # - PSTNGW_REGISTER=${DIALER_PSTNGW_REGISTER}
      # - PSTNGW_SIP_AUTH=${DIALER_PSTNGW_SIP_AUTH}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    working_dir: /etc/asterisk
    
  dialer_call_manager:
    container_name: oml-call_manager_dialer
    build:
      context: ../development-env/omnileads-repos/omldialer_call_manager
    depends_on:
      - dialer_asterisk
      - redis
    image: ${OMLDIALER_CALL_MANAGER_IMG}
    command: python /app/dialer_call_manager.py
    environment:
      - TZ=${TZ}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - REDIS_PORT=${REDIS_PORT}
      - ARI_HOST=${DIALER_ASTERISK_ARI_HOSTNAME}
      - ARI_PORT=${DIALER_ASTERISK_ARI_PORT}
      - ARI_USER=${AMI_USER}
      - ARI_PASS=${AMI_PASSWORD}
    restart: on-failure
    networks:
      - omnileads  

  kamailio:
    container_name: oml-kamailio
    command:
      - /bin/bash
    depends_on:
      - redis
      - asterisk
      - rtpengine
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - AUTHEPH_SK=${AUTHEPH_SK}
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - RTPENGINE_HOSTNAME=${RTPENGINE_HOSTNAME}
      - SHM_SIZE=${SHM_SIZE}
      - PKG_SIZE=${PKG_SIZE}
      - KAMAILIO_CERTS_LOCATION=${KAMAILIO_CERTS_LOCATION}
    image: ${OMLKAM_IMG}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
     - ./certs:/${KAMAILIO_CERTS_LOCATION}
     #- ./asterisk_custom/kamailio.cfg:/etc/kamailio/kamailio.cfg:ro

  nginx:
    container_name: oml-nginx
    depends_on:
      - uwsgi
      - kamailio
      - websockets
      - daphne
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ENV=prodenv
      - DJANGO_HOSTNAME=${DJANGO_HOSTNAME}
      - WSGI_PORT=${UWSGI_PORT}
      - DAPHNE_HOSTNAME=${DAPHNE_HOSTNAME}
      - ASGI_PORT=${DAPHNE_PORT}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - KAMAILIO_PORT=${KAMAILIO_HTTPS_PORT}
      - WEBSOCKETS_HOSTNAME=${WEBSOCKET_HOSTNAME}
      - WEBSOCKETS_PORT=${WEBSOCKET_PORT}
      - S3_ENDPOINT=${S3_ENDPOINT_MINIO}
      - CALLREC_DEVICE=${CALLREC_DEVICE}
    image: ${OMLNGINX_IMG}
    networks:
      - omnileads
    privileged: true
    ports:
      - ${NGINX_EXT_PORT}:443/tcp
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - django_static:/opt/omnileads/static
      - django_callrec_zip:/opt/omnileads/asterisk/var/spool/asterisk/monitor

  postgresql:
    container_name: oml-postgresql
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    image: ${OMLPGSQL_IMG}
    networks:
      - omnileads
    ports:
      - ${PG_EXT_PORT}:5432/tcp
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - postgresql:/var/lib/postgresql/data

  redis:
    container_name: oml-redis
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - BIND_IP=0.0.0.0
    networks:
      - omnileads
    ports:
      - 16379:6379  
    image: ${OMLREDIS_IMG}
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - redis:/data

  rtpengine:
    container_name: oml-rtpengine
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ENV=${ENV}
      - SCALE=False
    image: ${OMLRTPENGINE_IMG}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s

  websockets:
    container_name: oml-websockets
    tty: true
    image: ${OMLWS_IMG}
    depends_on:
      - redis
    environment:
      - BIND_ADDRESS=0.0.0.0:8000
      - EVENT_LOOP=uvloop
      - LOGGERS=${WEBSOCKET_LOGGER}
      - REDIS_HOST=${WEBSOCKET_REDIS_HOSTNAME}
      - PYTHONUNBUFFERED=1
    ports:
      - "${WEBSOCKET_EXT_PORT}:8000"
    networks:
      - omnileads

  rabbitmq:
    container_name: oml-rabbitmq
    image: rabbitmq:management
    networks:
      - omnileads

  minio:
    container_name: oml-minio
    tty: true
    image: ${OMLMINIO_IMG}
    command: server --console-address "localhost:9001" /data
    environment:
      - MINIO_ROOT_USER=${S3_HTTP_ADMIN_USER}
      - MINIO_ROOT_PASSWORD=${S3_HTTP_ADMIN_PASS}
      - MINIO_SERVER_URL=${S3_ENDPOINT}
      - MINIO_PROMETHEUS_AUTH_TYPE="public"
    networks:
      - omnileads
    ports:
      - 9001:9001
      - 9000:9000
    volumes:
      - minio:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:  
    container_name: oml-minio_create_bucket
    depends_on:
      - minio
    tty: true
    image: minio/mc
    networks:
      - omnileads
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host rm local;
      /usr/bin/mc config host add --quiet --api s3v4 local http://minio:9000 minio s3minio123;
      /usr/bin/mc mb --quiet local/omnileads/;
      /usr/bin/mc admin user add local omlminio s3omnileads123;
      /usr/bin/mc admin policy attach local readwrite --user omlminio;
      exit 0;
      "
      
  pbxemulator:
    container_name: oml-pbxemulator
    hostname: pbxemulator
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
    image: ${OMLPSTNEMULATOR_IMG}
    networks:
      - omnileads
    volumes:
      - ./pstn_emulator_custom_conf:/etc/asterisk/custom/  
    ports:
      - 4569:4569/udp
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true

  videocalls:
    container_name: oml-videocalls_phone
    dns: 8.8.8.8
    image: ${OMLVIDEOCALLS_WIDGET_IMG}
    environment:
      - CLIENT_USERNAME=${VIDEOCALLS_USERNAME}
      - CLIENT_PASSWORD=${VIDEOCALLS_PASSWORD}
    networks: 
      - omnileads
    ports:
      - 8889:5000
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true
  
  # wombat:  
  #   command: >
  #     bash -c "sed -i '/JDBC_URL/c\JDBC_URL=jdbc:mariadb:\/\/${MYSQL_HOST}\/${WOMBAT_DB}?user=${WOMBAT_DB_USER}&password=${WOMBAT_DB_PASS}&autoReconnect=true' /usr/local/tomcat/webapps/wombat/WEB-INF/tpf.properties && catalina.sh run"
  #   container_name: oml-wombat
  #   depends_on:
  #     - mariadb
  #   dns: 8.8.8.8
  #   environment:
  #     - TZ=${TZ}
  #     - MYSQL_PWD=${MYSQL_ROOT_PASS}
  #   image: ${WOMBAT_IMG}
  #   networks:
  #     - omnileads
  #   ports:
  #     - 8082:8080/tcp
  #   privileged: true
  #   restart: on-failure
  #   stop_grace_period: 1m30s

  # mariadb:
  #   container_name: oml-mariadb
  #   dns: 8.8.8.8
  #   environment:
  #     - ALLOW_EMPTY_PASSWORD=yes
  #     - TZ=${TZ}
  #     - MARIADB_ROOT_PASSWORD=${MYSQL_ROOT_PASS}
  #     - MARIADB_DATABASE=${WOMBAT_DB}
  #     - MARIADB_USER=${WOMBAT_DB_USER}
  #     - MARIADB_PASSWORD=${WOMBAT_DB_PASS}
  #   image: ${MARIADB_IMG}
  #   networks:
  #     - omnileads
  #   privileged: true
  #   restart: on-failure
  #   stop_grace_period: 1m30s
  #   volumes:
  #     - mariadb:/bitnami

networks:
  omnileads:
    ipam:
      driver: default
      config:
        - subnet: "${SUBNET}"

volumes:
  postgresql:
  redis:
  minio:
  #mariadb:
  django_callrec_zip:
  django_static:
  asterisk_callrec:
  asterisk_conf:
  asterisk_sounds:
