version: '3.8'
services:
  app:
    container_name: omlapp
    depends_on:
      - postgresql
      - redis
      - acd
      - minio
    dns: 8.8.8.8
    command:
      - 'python3 manage.py cambiar_admin_password'
    environment:
      - TZ=${TZ}
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - PGHOST=${PGHOST}
      - PGDATABASE=${PGDATABASE}
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGHOSTHA=${PGHOSTHA}
      - PGHOSTRO=${PGHOSTRO}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - WEBSOCKET_HOST=${WEBSOCKET_HOST}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT}
      - CALIFICACION_REAGENDA=${CALIFICACION_REAGENDA}
      - DJANGO_SETTINGS_MODULE=ominicontacto.settings.develop
      - EPHEMERAL_USER_TTL=${EPHEMERAL_USER_TTL}
      - INSTALL_PREFIX=${INSTALL_PREFIX}
      - LOGIN_FAILURE_LIMIT=${LOGIN_FAILURE_LIMIT}
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
      - PYTHONPATH=${PYTHONPATH}
      - SESSION_COOKIE_AGE=${SESSION_COOKIE_AGE}
      - CALLREC_DEVICE=${CALLREC_DEVICE}
      - MONITORFORMAT=${MONITORFORMAT}
      - S3_STORAGE_ENABLED=true
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - AWS_DEFAULT_REGION=us-east-1
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - GOOGLE_MAPS_CENTER='${GOOGLE_MAPS_CENTER}'
      - EMAIL_BACKEND=django.core.mail.backends.dummy.EmailBackend
      - OML_BRANCH=${OML_BRANCH}
      - OML_COMMIT=${OML_COMMIT}
      - OML_BUILD_DATE=${OML_BUILD_DATE}
      - WOMBAT_HOSTNAME=localhost
      - WOMBAT_USER=${WOMBAT_USER}
      - WOMBAT_PASSWORD=${WOMBAT_PASSWORD}
    image: ${OMLAPP_IMG}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stdin_open: true
    stop_grace_period: 1m30s
    tty: true
    working_dir: /opt/omnileads/ominicontacto

  acd:
    container_name: omlacd
    depends_on:
      - postgresql
      - redis
      - websockets
      - minio
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ASTERISK_LOCATION=${ASTERISK_LOCATION}
      - AMI_USER=${AMI_USER}
      - AMI_PASSWORD=${AMI_PASSWORD}
      - OMNILEADS_HOSTNAME=${OMNILEADS_HOSTNAME}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - PGHOST=${PGHOST}
      - PGPORT=${PGPORT}
      - PGUSER=${PGUSER}
      - PGDATABASE=${PGDATABASE}
      - PGPASSWORD=${PGPASSWORD}
      - CALLREC_DEVICE=${CALLREC_DEVICE}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT_MINIO}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - HOMERHOST=${HOMERHOST}
      - HOMERPORT=${HOMERPORT}
      - HOMER_ENABLE=${HOMERENABLE}
    image: ${OMLACD_IMG}
    networks:
      - omnileads
    ports:
      - ${SIP_EXT_PORT}:5060/udp
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - ./ast_custom_conf:/etc/asterisk/custom
    working_dir: /etc/asterisk

  kamailio:
    command:
      - /bin/bash
    container_name: omlkamailio
    depends_on:
      - redis
      - acd
      - rtpengine
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - AUTHEPH_SK=${AUTHEPH_SK}
      - ASTERISK_HOSTNAME=${ASTERISK_HOSTNAME}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
      - RTPENGINE_HOSTNAME=${RTPENGINE_HOSTNAME}
      - SHM_SIZE=${SHM_SIZE}
      - PKG_SIZE=${PKG_SIZE}
      - KAMAILIO_CERTS_LOCATION=${KAMAILIO_CERTS_LOCATION}
    image: ${OMLKAM_IMG}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - ./certs:/${KAMAILIO_CERTS_LOCATION}

  nginx:
    container_name: omlnginx
    depends_on:
      - app
      - kamailio
      - websockets
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ENV=devenv
      - DJANGO_HOSTNAME=${DJANGO_HOSTNAME}
      - KAMAILIO_HOSTNAME=${KAMAILIO_HOSTNAME}
      - WEBSOCKETS_HOSTNAME=${WEBSOCKET_HOSTNAME}
      - S3_ENDPOINT=${S3_ENDPOINT_MINIO}
    image: ${OMLNGINX_IMG}
    networks:
      - omnileads
    privileged: true
    ports:
      - ${NGINX_EXT_PORT}:443/tcp
    restart: on-failure
    stop_grace_period: 1m30s

  postgresql:
    container_name: omlpostgresql
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    image: ${OMLPGSQL_IMG}
    networks:
      - omnileads
    ports:
      - ${PG_EXT_PORT}:5432/tcp
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - postgresql_data:/var/lib/postgresql/data

  redis:
    container_name: omlredis
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
    networks:
      - omnileads
    image: ${OMLREDISGEARS_IMG}
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s
    volumes:
      - redis_data:/data

  rtpengine:
    container_name: omlrtpengine
    dns: 8.8.8.8
    environment:
      - TZ=${TZ}
      - ENV=devenv
    image: ${OMLRTPENGINE_IMG}
    networks:
      - omnileads
    privileged: true
    restart: on-failure
    stop_grace_period: 1m30s

  websockets:
    tty: true
    container_name: omlwebsockets
    image: ${OMLWS_IMG}
    depends_on:
      - redis
    environment:
      - BIND_ADDRESS=0.0.0.0:8000
      - EVENT_LOOP=uvloop
      - LOGGERS=${WEBSOCKET_LOGGER}
      - REDIS_HOST=${WEBSOCKET_REDIS_HOSTNAME}
    ports:
      - "${WEBSOCKET_EXT_PORT}:8000"
    networks:
      - omnileads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health-checks"]
      interval: 30s
      timeout: 10s
      retries: 10

  minio:
    tty: true
    container_name: omls3
    image: ${OMLMINIO_IMG}
    command: server --console-address "localhost:9001" /data
    environment:
      - MINIO_ROOT_USER=${S3_HTTP_ADMIN_USER}
      - MINIO_ROOT_PASSWORD=${S3_HTTP_ADMIN_PASS}
      - MINIO_SERVER_URL=${S3_ENDPOINT}
      - MINIO_PROMETHEUS_AUTH_TYPE="public"
    networks:
      - omnileads
    ports:
      - 9001:9001
      - 9000:9000
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  ptheus_postgres_exp:
    container_name: omlpgsql_ptheus
    image: prometheuscommunity/postgres-exporter
    networks:
      - omnileads
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://omnileads:admin123@postgresql:5432/omnileads?sslmode=disable"

  ptheus_redis_exp:
      container_name: omlredis_ptheus
      image: oliver006/redis_exporter
      networks:
        - omnileads
      ports:
        - 9121:9121
      restart: unless-stopped
      environment:
        REDIS_ADDR: "redis:6379"
        REDIS_USER: null
        REDIS_PASSWORD: null


networks:
  omnileads:
    ipam:
      driver: default
      config:
        - subnet: "${SUBNET}"

volumes:
  postgresql_data:
  redis_data:
  minio_data:
